if (x[i]>(1/n[j]))
{
control<-c(rep(1-(x[i]/(n[j]-1)),n[j]),x[i])
H[i,j]<- -sum(control*log(control))
}
}
}
image(H,xlab="assymmetry",ylab="Group size")
H[1,]
H[,1]
image(H,xlab="Group size",ylab="Assymmetry")
image(H,xlab="Assymmetry",ylab="Group size")
x<-seq(0.1,0.9,0.01)
n<-seq(3,50,1)
H<-matrix(NA,nrow=length(x),ncol=length(n))
for (i in 1:length(x))
{
for (j in 1:length(n))
{
if (x[i]>(1/n[j]))
{
control<-c(rep(1-(x[i]/(n[j]-1)),n[j]),x[i])
H[i,j]<- -sum(control*log(control))
}
}
}
image(H,xlab="Assymmetry",ylab="Group size")
?colors
image(H,xlab="Assymmetry",ylab="Group size",col=topo.colors(15))
image(H,xlab="Assymmetry",ylab="Group size",col=heat.colors(15))
image(H,xlab="Assymmetry",ylab="Group size",col=heat.colors(30))
image(H,xlab="Assymmetry",ylab="Group size",col=topo.colors(30))
?images
?image
?contour
image(x=x,y=n,H,xlab="Assymmetry",ylab="Group size",col=topo.colors(30))
contour(x=x,y=n,H,add=T,levels=seq(0,10,1))
contour(x=x,y=n,H,add=T,levels=seq(0,10,0.1))
image(x=x,y=n,H,xlab="% that lead PI controls",ylab="Group size",col=topo.colors(30))
contour(x=x,y=n,H,add=T,levels=seq(0,10,0.1))
X <- seq(2, 12, 0.1)
sigma <- 0.10
m <- 1000
#########
n <- 10    # redo for all n in c(10,100,1000)
abundance <- array(data=NA, dim=c(length(X), n, m))
for (i in 1:length(X))  # iterate over mean colony size
{
for (j in 1:n) # iterate over the colonies to be summed
{
abundance[i,j,] <- rlnorm(m,X[i],sigma)  # approximately but not exactly 10% error
}
}
median.abundance <- apply(abundance, c(1,2), FUN=median) # take the median abundance for each colony
sum.median <- apply(median.abundance, 1, sum)
sum.abundance <- apply(abundance, c(1,3), FUN=sum)
median.sum <- apply(sum.abundance, 1, median)
hist(median.sum)
hist(sum.median,add=T,col="red")
hist(sum.mean,add=T,col="green")
X <- seq(2, 12, 0.1)
sigma <- 0.10
m <- 1000
#########
n <- 10    # redo for all n in c(10,100,1000)
abundance <- array(data=NA, dim=c(length(X), n, m))
for (i in 1:length(X))  # iterate over mean colony size
{
for (j in 1:n) # iterate over the colonies to be summed
{
abundance[i,j,] <- rlnorm(m,X[i],sigma)  # approximately but not exactly 10% error
}
}
median.abundance <- apply(abundance, c(1,2), FUN=median) # take the median abundance for each colony
mean.abundance <- apply(abundance, c(1,2), FUN=mean) # take the median abundance for each colony
sum.median <- apply(median.abundance, 1, sum)
sum.mean <- apply(mean.abundance, 1, sum)
sum.abundance <- apply(abundance, c(1,3), FUN=sum)
median.sum <- apply(sum.abundance, 1, median)
mean.sum <- apply(sum.abundance, 1, mean)
X <- seq(2, 12, 0.1)
sigma <- 0.10
m <- 1000
#########
n <- 100    # redo for all n in c(10,100,1000)
abundance <- array(data=NA, dim=c(length(X), n, m))
for (i in 1:length(X))  # iterate over mean colony size
{
for (j in 1:n) # iterate over the colonies to be summed
{
abundance[i,j,] <- rlnorm(m,X[i],sigma)  # approximately but not exactly 10% error
}
}
median.abundance <- apply(abundance, c(1,2), FUN=median) # take the median abundance for each colony
mean.abundance <- apply(abundance, c(1,2), FUN=mean) # take the median abundance for each colony
sum.median <- apply(median.abundance, 1, sum)
sum.mean <- apply(mean.abundance, 1, sum)
sum.abundance <- apply(abundance, c(1,3), FUN=sum)
median.sum <- apply(sum.abundance, 1, median)
mean.sum <- apply(sum.abundance, 1, mean)
hist(sum.mean)
hist(sum.median,add=T,col="red")
median.sum
hist(median.sum,add=T,col="green")
n <- 100    # redo for all n in c(10,100,1000)
abundance <- array(data=NA, dim=c(n, m))
for (j in 1:n) # iterate over the colonies to be summed
{
abundance[j,] <- rlnorm(m,6,sigma)  # approximately but not exactly 10% error
}
median.abundance <- apply(abundance, 2, FUN=median) # take the median abundance for each colony
mean.abundance <- apply(abundance, 2, FUN=mean) # take the median abundance for each colony
sum.median <- sum(median.abundance)
sum.mean <- sum(mean.abundance)
sum.abundance <- apply(abundance, 1, FUN=sum)
median.sum <- median(sum.abundance)
mean.sum <- mean(sum.abundance)
n <- 100    # redo for all n in c(10,100,1000)
abundance <- array(data=NA, dim=c(n, m))
for (j in 1:n) # iterate over the colonies to be summed
{
abundance[j,] <- rlnorm(m,6,sigma)  # approximately but not exactly 10% error
}
median.abundance <- apply(abundance, 2, FUN=median) # take the median abundance for each colony
mean.abundance <- apply(abundance, 2, FUN=mean) # take the median abundance for each colony
sum.median <- sum(median.abundance)
sum.mean <- sum(mean.abundance)
sum.abundance <- apply(abundance, 1, FUN=sum)
median.sum <- median(sum.abundance)
mean.sum <- mean(sum.abundance)
hist(sum.mean)
hist(sum.median,add=T,col="red")
hist(median.sum,add=T,col="green")
hist(mean.sum,add=T,col="yellow")
mean.sum
median.sum
hist(sum.mean)
hist(sum.median,add=T,col="red")
abline(v=mean.sum,col="yellow")
abline(v=median,col="purple")
sum.median
sum.mean
hist(sum.abundance)
abline(v=mean.sum,col="yellow")
abline(v=median.sum,col="purple")
abline(v=sum.median,col="blue")
n <- 100    # redo for all n in c(10,100,1000)
abundance <- array(data=NA, dim=c(n, m))
for (j in 1:n) # iterate over the colonies to be summed
{
abundance[j,] <- rlnorm(m,8,sigma)  # approximately but not exactly 10% error
}
median.abundance <- apply(abundance, 2, FUN=median) # take the median abundance for each colony
mean.abundance <- apply(abundance, 2, FUN=mean) # take the median abundance for each colony
sum.median <- sum(median.abundance)
sum.mean <- sum(mean.abundance)
sum.abundance <- apply(abundance, 1, FUN=sum)
median.sum <- median(sum.abundance)
mean.sum <- mean(sum.abundance)
hist(sum.abundance)
abline(v=mean.sum,col="yellow",lwd=2)
abline(v=median.sum,col="purple",lwd=2)
abline(v=sum.median,col="blue",lwd=2)
sigma <- 0.20
sigma <- 0.20
n <- 100    # redo for all n in c(10,100,1000)
abundance <- array(data=NA, dim=c(n, m))
for (j in 1:n) # iterate over the colonies to be summed
{
abundance[j,] <- rlnorm(m,8,sigma)  # approximately but not exactly 10% error
}
median.abundance <- apply(abundance, 2, FUN=median) # take the median abundance for each colony
mean.abundance <- apply(abundance, 2, FUN=mean) # take the median abundance for each colony
sum.median <- sum(median.abundance)
sum.mean <- sum(mean.abundance)
sum.abundance <- apply(abundance, 1, FUN=sum)
median.sum <- median(sum.abundance)
mean.sum <- mean(sum.abundance)
hist(sum.abundance)
abline(v=mean.sum,col="yellow",lwd=2)
abline(v=median.sum,col="purple",lwd=2)
abline(v=sum.median,col="blue",lwd=2)
hist(sum.abundance,xlim=c(mean.sum-5*sd(sum.abundance),mean.sum+5*sd(sum.abundance)))
abline(v=mean.sum,col="yellow",lwd=2)
abline(v=median.sum,col="purple",lwd=2)
abline(v=sum.median,col="blue",lwd=2)
sigma <- 0.20
n <- 100    # redo for all n in c(10,100,1000)
abundance <- array(data=NA, dim=c(n, m))
for (j in 1:n) # iterate over the colonies to be summed
{
abundance[j,] <- rlnorm(m,8,sigma)  # approximately but not exactly 10% error
}
median.abundance <- apply(abundance, 2, FUN=median) # take the median abundance for each colony
mean.abundance <- apply(abundance, 2, FUN=mean) # take the median abundance for each colony
sum.median <- sum(median.abundance)
sum.mean <- sum(mean.abundance)
sum.abundance <- apply(abundance, 1, FUN=sum)
median.sum <- median(sum.abundance)
mean.sum <- mean(sum.abundance)
hist(sum.abundance,xlim=c(mean.sum-5*sd(sum.abundance),mean.sum+5*sd(sum.abundance)))
abline(v=mean.sum,col="yellow",lwd=2)
abline(v=median.sum,col="purple",lwd=2)
abline(v=sum.median,col="blue",lwd=2)
hist(sum.abundance,xlim=c(mean.sum-5*sd(sum.abundance),mean.sum+5*sd(sum.abundance)),breaks=30)
abline(v=mean.sum,col="yellow",lwd=2)
abline(v=median.sum,col="purple",lwd=2)
abline(v=sum.median,col="blue",lwd=2)
hist(sum.abundance,xlim=c(mean.sum-5*sd(sum.abundance),mean.sum+5*sd(sum.abundance)),breaks=20)
abline(v=mean.sum,col="yellow",lwd=2)
abline(v=median.sum,col="purple",lwd=2)
abline(v=sum.median,col="blue",lwd=2)
hist(sum.abundance,xlim=c(mean.sum-5*sd(sum.abundance),mean.sum+5*sd(sum.abundance)),breaks=15)
abline(v=mean.sum,col="yellow",lwd=2)
abline(v=median.sum,col="purple",lwd=2)
abline(v=sum.median,col="blue",lwd=2)
hist(sum.abundance,xlim=c(mean.sum-5*sd(sum.abundance),mean.sum+5*sd(sum.abundance)),breaks=15)
abline(v=mean.sum,col="yellow",lwd=2)
abline(v=median.sum,col="purple",lwd=2)
abline(v=sum.median,col="blue",lwd=2)
dim(median.abundance)
dim(abundance)
length(median.abundance)
m<-1000
sigma <- 0.10
n <- 100    # redo for all n in c(10,100,1000)
abundance <- array(data=NA, dim=c(n, m))
for (j in 1:n) # iterate over the colonies to be summed
{
abundance[j,] <- rlnorm(m,8,sigma)  # approximately but not exactly 10% error
}
median.abundance <- apply(abundance, 1, FUN=median) # take the median abundance for each colony
mean.abundance <- apply(abundance, 1, FUN=mean) # take the median abundance for each colony
sum.median <- sum(median.abundance)
sum.mean <- sum(mean.abundance)
sum.abundance <- apply(abundance, 2, FUN=sum)
median.sum <- median(sum.abundance)
mean.sum <- mean(sum.abundance)
hist(sum.abundance,xlim=c(mean.sum-5*sd(sum.abundance),mean.sum+5*sd(sum.abundance)),breaks=15)
abline(v=mean.sum,col="yellow",lwd=2)
abline(v=median.sum,col="purple",lwd=2)
abline(v=sum.median,col="blue",lwd=2)
length(median.abundance)
length(sum.abundance)
hist(sum.abundance,xlim=c(mean.sum-5*sd(sum.abundance),mean.sum+5*sd(sum.abundance)),breaks=15)
abline(v=mean.sum,col="yellow",lwd=2)
abline(v=median.sum,col="purple",lwd=2)
abline(v=sum.median,col="blue",lwd=2)
abline(v=sum.mean,col="green",lwd=2)
m<-1000
sigma <- 0.20
n <- 100    # redo for all n in c(10,100,1000)
abundance <- array(data=NA, dim=c(n, m))
for (j in 1:n) # iterate over the colonies to be summed
{
abundance[j,] <- rlnorm(m,8,sigma)  # approximately but not exactly 10% error
}
median.abundance <- apply(abundance, 1, FUN=median) # take the median abundance for each colony
mean.abundance <- apply(abundance, 1, FUN=mean) # take the median abundance for each colony
sum.median <- sum(median.abundance)
sum.mean <- sum(mean.abundance)
sum.abundance <- apply(abundance, 2, FUN=sum)
median.sum <- median(sum.abundance)
mean.sum <- mean(sum.abundance)
hist(sum.abundance,xlim=c(mean.sum-5*sd(sum.abundance),mean.sum+5*sd(sum.abundance)),breaks=15)
abline(v=mean.sum,col="yellow",lwd=2)
abline(v=median.sum,col="purple",lwd=2)
abline(v=sum.median,col="blue",lwd=2)
abline(v=sum.mean,col="green",lwd=2)
m<-1000
sigma <- 0.20
n <- 100    # redo for all n in c(10,100,1000)
abundance <- array(data=NA, dim=c(n, m))
for (j in 1:n) # iterate over the colonies to be summed
{
abundance[j,] <- rlnorm(m,9,sigma)  # approximately but not exactly 10% error
}
median.abundance <- apply(abundance, 1, FUN=median) # take the median abundance for each colony
mean.abundance <- apply(abundance, 1, FUN=mean) # take the median abundance for each colony
sum.median <- sum(median.abundance)
sum.mean <- sum(mean.abundance)
sum.abundance <- apply(abundance, 2, FUN=sum)
median.sum <- median(sum.abundance)
mean.sum <- mean(sum.abundance)
hist(sum.abundance,xlim=c(mean.sum-5*sd(sum.abundance),mean.sum+5*sd(sum.abundance)),breaks=15)
abline(v=mean.sum,col="yellow",lwd=2)
abline(v=median.sum,col="purple",lwd=2)
abline(v=sum.median,col="blue",lwd=2)
abline(v=sum.mean,col="green",lwd=2)
m<-1000
sigma <- 0.50
n <- 100    # redo for all n in c(10,100,1000)
abundance <- array(data=NA, dim=c(n, m))
for (j in 1:n) # iterate over the colonies to be summed
{
abundance[j,] <- rlnorm(m,9,sigma)  # approximately but not exactly 10% error
}
median.abundance <- apply(abundance, 1, FUN=median) # take the median abundance for each colony
mean.abundance <- apply(abundance, 1, FUN=mean) # take the median abundance for each colony
sum.median <- sum(median.abundance)
sum.mean <- sum(mean.abundance)
sum.abundance <- apply(abundance, 2, FUN=sum)
median.sum <- median(sum.abundance)
mean.sum <- mean(sum.abundance)
hist(sum.abundance,xlim=c(mean.sum-5*sd(sum.abundance),mean.sum+5*sd(sum.abundance)),breaks=15)
abline(v=mean.sum,col="yellow",lwd=2)
abline(v=median.sum,col="purple",lwd=2)
abline(v=sum.median,col="blue",lwd=2)
abline(v=sum.mean,col="green",lwd=2)
m<-1000
sigma <- 0.50
n <- 100    # redo for all n in c(10,100,1000)
abundance <- array(data=NA, dim=c(n, m))
for (j in 1:n) # iterate over the colonies to be summed
{
abundance[j,] <- rlnorm(m,10,sigma)  # approximately but not exactly 10% error
}
median.abundance <- apply(abundance, 1, FUN=median) # take the median abundance for each colony
mean.abundance <- apply(abundance, 1, FUN=mean) # take the median abundance for each colony
sum.median <- sum(median.abundance)
sum.mean <- sum(mean.abundance)
sum.abundance <- apply(abundance, 2, FUN=sum)
median.sum <- median(sum.abundance)
mean.sum <- mean(sum.abundance)
hist(sum.abundance,xlim=c(mean.sum-5*sd(sum.abundance),mean.sum+5*sd(sum.abundance)),breaks=15)
abline(v=mean.sum,col="yellow",lwd=2)
abline(v=median.sum,col="purple",lwd=2)
abline(v=sum.median,col="blue",lwd=2)
abline(v=sum.mean,col="green",lwd=2)
m<-1000
sigma <- 0.23
n <- 100    # redo for all n in c(10,100,1000)
abundance <- array(data=NA, dim=c(n, m))
for (j in 1:n) # iterate over the colonies to be summed
{
abundance[j,] <- rlnorm(m,10,sigma)  # approximately but not exactly 10% error
}
median.abundance <- apply(abundance, 1, FUN=median) # take the median abundance for each colony
mean.abundance <- apply(abundance, 1, FUN=mean) # take the median abundance for each colony
sum.median <- sum(median.abundance)
sum.mean <- sum(mean.abundance)
sum.abundance <- apply(abundance, 2, FUN=sum)
median.sum <- median(sum.abundance)
mean.sum <- mean(sum.abundance)
hist(sum.abundance,xlim=c(mean.sum-5*sd(sum.abundance),mean.sum+5*sd(sum.abundance)),breaks=15)
abline(v=mean.sum,col="yellow",lwd=2)
abline(v=median.sum,col="purple",lwd=2)
abline(v=sum.median,col="blue",lwd=2)
abline(v=sum.mean,col="green",lwd=2)
m<-1000
sigma <- 0.23
n <- 1000    # redo for all n in c(10,100,1000)
abundance <- array(data=NA, dim=c(n, m))
for (j in 1:n) # iterate over the colonies to be summed
{
abundance[j,] <- rlnorm(m,8,sigma)  # approximately but not exactly 10% error
}
median.abundance <- apply(abundance, 1, FUN=median) # take the median abundance for each colony
mean.abundance <- apply(abundance, 1, FUN=mean) # take the median abundance for each colony
sum.median <- sum(median.abundance)
sum.mean <- sum(mean.abundance)
sum.abundance <- apply(abundance, 2, FUN=sum)
median.sum <- median(sum.abundance)
mean.sum <- mean(sum.abundance)
hist(sum.abundance,xlim=c(mean.sum-5*sd(sum.abundance),mean.sum+5*sd(sum.abundance)),breaks=15)
abline(v=mean.sum,col="yellow",lwd=2)
abline(v=median.sum,col="purple",lwd=2)
abline(v=sum.median,col="blue",lwd=2)
abline(v=sum.mean,col="green",lwd=2)
m<-1000
sigma <- 0.23
n <- 1000    # redo for all n in c(10,100,1000)
abundance <- array(data=NA, dim=c(n, m))
for (j in 1:n) # iterate over the colonies to be summed
{
abundance[j,] <- rlnorm(m,8,sigma)  # approximately but not exactly 10% error
}
median.abundance <- apply(abundance, 1, FUN=median) # take the median abundance for each colony
mean.abundance <- apply(abundance, 1, FUN=mean) # take the median abundance for each colony
sum.median <- sum(median.abundance)
sum.mean <- sum(mean.abundance)
sum.abundance <- apply(abundance, 2, FUN=sum)
median.sum <- median(sum.abundance)
mean.sum <- mean(sum.abundance)
hist(sum.abundance,xlim=c(mean.sum-5*sd(sum.abundance),mean.sum+5*sd(sum.abundance)),breaks=15)
abline(v=mean.sum,col="yellow",lwd=2)
abline(v=median.sum,col="purple",lwd=2)
abline(v=sum.median,col="blue",lwd=2)
abline(v=sum.mean,col="green",lwd=2)
mean.sum
median.sum
sum.mean
candy_color<-c("brown","yellow","green","red","orange","blue")
company<-c(0.14,0.14,0.16,0.13,0.19,0.24)
my_bag<-c(1,1,2,2,10,7)
color_prob<-data.frame(candy_color,company,my_bag,stringsAsFactors = FALSE)
head(color_prob)
sample(size=29,
color_prob$candy_color,
prob=color_prob$company,
replace=TRUE))
sample(size=29,
color_prob$candy_color,
prob=color_prob$company,
replace=TRUE)
color_prob$candy_color
for (i in 1:100){
if((table(sample(size=29,
color_prob$candy_color,
prob=color_prob$company,
replace=TRUE)))==color_prob$my_bag){
print(1)
} else print(0)
}
sample(size=29,
color_prob$candy_color,
prob=color_prob$company,
replace=TRUE)
color_prob$my_bag
table(sample(size=29,
color_prob$candy_color,
prob=color_prob$company,
replace=TRUE))
my_bag<-sample(size=29,
color_prob$candy_color,
prob=color_prob$company,
replace=TRUE)
my_bag
may_bag=="red"
my_bag=="red"
as.numeric(my_bag=="red")
sum(as.numeric(my_bag=="red"))
number.red<-sum(as.numeric(my_bag=="red"))
library("boot", lib.loc="/Library/Frameworks/R.framework/Versions/4.0/Resources/library")
darwin
hist(darwin)
hist(darwin$y)
sort(darwin$y)
install.packages("smoothr")
library(raster)
library(sf)
library(units)
jagged_polygons
library(smoothr)
jagged_polygons
plot(jagged_polygons[1])
plot(jagged_polygons[[1]])
plot(jagged_polygons[1][1])
plot(jagged_polygons[2])
plot(jagged_polygons[2][2])
plot(jagged_polygons[[1]])
names(jagged_polygons)
names(jagged_polygons$id==1)
plot(jagged_polygons$id==1)
library(readr)
Challenger_data <- read_csv("Dropbox/Biometry/Week 10 Multiple regression and GLMs/Week 10 Lab/Challenger_data.csv")
View(Challenger_data)
library(readr)
Challenger_data_fieldandnozzle <- read_csv("Dropbox/Biometry/Week 10 Multiple regression and GLMs/Week 10 Lab/Challenger_data_fieldandnozzle.csv")
View(Challenger_data_fieldandnozzle)
attach(challenger)
plot(Temp,O.ring.failure,xlab="Temperature",ylab="Damage",main="O-ring damage vs. Temperature")
challenger.fit1<-lm(O.ring.failure~Temp)
summary(challenger.fit1)
challenger<-Challenger_data
attach(challenger)
plot(Temp,O.ring.failure,xlab="Temperature",ylab="Damage",main="O-ring damage vs. Temperature")
challenger.fit1<-lm(O.ring.failure~Temp)
summary(challenger.fit1)
challenger.fit3<-glm(O.ring.failure~Temp, family="binomial")
plot(Temp,O.ring.failure,xlab="Temperature",ylab="Damage",main="O-ring Damage vs. Temperature")
# Above line only needed because RMarkdown doesn't keep previous plot
lines(Temp,fitted(challenger.fit1),col="red")
# Above line only needed because RMarkdown doesn't keep previous plot
lines(Temp,fitted(challenger.fit2),col="blue")
# Above line only needed because RMarkdown doesn't keep previous plot
lines(sort(Temp), fitted(challenger.fit3)[order(Temp)],col="green",lwd=2)
challenger.fit4<-glm(O.ring.failure~1,family=binomial)
-2*logLik(challenger.fit4)
-2*logLik(challenger.fit3)
28.26715-20.31519
1-pchisq(7.95196,df=1)
diff<--2*logLik(challenger.fit4)-(-2*logLik(challenger.fit3))
diff
1-pchisq(diff,df=1)
1-pchisq(as.numeric(diff),df=1)
diff<- as.numeric(-2*logLik(challenger.fit4))-as.numeric((-2*logLik(challenger.fit3)))
diff
1-pchisq(diff,df=1)
-0.03738/0.01205
1-pt(-3.102075,df=21)
pt(-3.102075,df=21)
pt(-3.102075,df=21)*2
pt(-3.103,df=21)*2
fit3$coef
challenger.fit3$coef
challenger.fit3$coef[1]
challenger.fit3$coef[2]
challenger.fit3$coef[2]/challenger.fit3$se[2]
pt(-3.102075,df=210)*2
pt(-3.102075,df=21)*2
pnorm(-3.102075)*2
pt(-3.102075,df=20)*2
pt(-3.102075,df=22)*2
setwd("~/Documents/Projects/Biometry2021")
bookdown::render_book("index.Rmd")
bookdown::render_book("index.Rmd")
?aov
0.75*0.25
sqrt(0.75*0.25)
sqrt(0.75*0.25)/0.01
(0.433/0.0026)^2
