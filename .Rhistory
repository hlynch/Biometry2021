if (runif(1)>perc.explore)
{
random<-0
}
}
total.winning.store<-rbind(total.winning.store,total.winning)
}
?include_app
?knit::include_app
?knitr::include_app
shiny::runApp('Documents/Projects/Biometry2021/NormalDistribution')
1.31*1.44
1.8862*193341
306*900
1.25*1.31*4210
60.09+38+20.41
plot(c(1,2,3,4,5,6,7,8),c(71,68,69,71,77,79,88,85))
plot(c(1,2,3,4,5,6,7,8),c(71,68,69,71,77,79,88,85),pch=16)
plot(c(425,480,545,605,660,725,832.5,950),c(71,68,69,71,77,79,88,85),pch=16)
plot(c(425,480,545,605,660,725,832.5,950),c(71,68,69,71,77,79,88,85),pch=16,cex=2)
3227*900
?dnorm(0.5,0,1)
dnorm(0.5,0,1)
30*60
50000/1800
0.5log(0.5)
0.5*log(0.5)
-0.5*log(0.5)
c(0.5,0.5)
control<-c(0.5,0.5)
-sum(control*log(control))
control<-c(0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1)
-sum(control*log(control))
control<-c(0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.91)
-sum(control*log(control))
control<-c(0.25,0.75)
-sum(control*log(control))
control<-c(rep(1-(x/(n-1)),n),x)
x<-0.9
n<-10
control<-c(rep(1-(x/(n-1)),n),x)
control
control<-c(rep((1-x)/(n-1),n),x)
control
n<-5
control<-c(rep((1-x)/(n-1),n),x)
n<-5
control<-c(rep((1-x)/(n-1),n),x)
control
-sum(control*log(control))
n<-2
-sum(control*log(control))
n<-3
-sum(control*log(control))
x<-seq(0.1,0.9,0.05)
n<-seq(2,100,1)
H<-matrix(NA,dim=c(length(x),length(n)))
?matrix
x<-seq(0.1,0.9,0.05)
n<-seq(2,100,1)
H<-matrix(NA,nrow=length(x),ncol=length(n))
dim(H)
x<-seq(0.1,0.9,0.05)
n<-seq(2,100,1)
H<-matrix(NA,nrow=length(x),ncol=length(n))
for (i in 1:length(x))
{
for (j in 1:length(n))
{
control<-c(rep(1-(x[i]/(n[j]-1)),n[j]),x[i])
H[i,j]<- -sum(control*log(control))
}
}
image(H)
head(H)
?image
head(H,xaxs="assymmetry",yaxs="Group size")
head(H,xlab="assymmetry",ylab="Group size")
image(H,xlab="assymmetry",ylab="Group size")
H[1,]
H[,1]
x<-seq(0.1,0.9,0.05)
n<-seq(2,100,1)
H<-matrix(NA,nrow=length(x),ncol=length(n))
for (i in 1:length(x))
{
for (j in 1:length(n))
{
if (x[i]>(1/n[j]))
{
control<-c(rep(1-(x[i]/(n[j]-1)),n[j]),x[i])
H[i,j]<- -sum(control*log(control))
}
}
}
image(H,xlab="assymmetry",ylab="Group size")
x<-seq(0.1,0.9,0.01)
n<-seq(2,50,1)
H<-matrix(NA,nrow=length(x),ncol=length(n))
for (i in 1:length(x))
{
for (j in 1:length(n))
{
if (x[i]>(1/n[j]))
{
control<-c(rep(1-(x[i]/(n[j]-1)),n[j]),x[i])
H[i,j]<- -sum(control*log(control))
}
}
}
image(H,xlab="assymmetry",ylab="Group size")
H[1,]
H[,1]
image(H,xlab="Group size",ylab="Assymmetry")
image(H,xlab="Assymmetry",ylab="Group size")
x<-seq(0.1,0.9,0.01)
n<-seq(3,50,1)
H<-matrix(NA,nrow=length(x),ncol=length(n))
for (i in 1:length(x))
{
for (j in 1:length(n))
{
if (x[i]>(1/n[j]))
{
control<-c(rep(1-(x[i]/(n[j]-1)),n[j]),x[i])
H[i,j]<- -sum(control*log(control))
}
}
}
image(H,xlab="Assymmetry",ylab="Group size")
?colors
image(H,xlab="Assymmetry",ylab="Group size",col=topo.colors(15))
image(H,xlab="Assymmetry",ylab="Group size",col=heat.colors(15))
image(H,xlab="Assymmetry",ylab="Group size",col=heat.colors(30))
image(H,xlab="Assymmetry",ylab="Group size",col=topo.colors(30))
?images
?image
?contour
image(x=x,y=n,H,xlab="Assymmetry",ylab="Group size",col=topo.colors(30))
contour(x=x,y=n,H,add=T,levels=seq(0,10,1))
contour(x=x,y=n,H,add=T,levels=seq(0,10,0.1))
image(x=x,y=n,H,xlab="% that lead PI controls",ylab="Group size",col=topo.colors(30))
contour(x=x,y=n,H,add=T,levels=seq(0,10,0.1))
X <- seq(2, 12, 0.1)
sigma <- 0.10
m <- 1000
#########
n <- 10    # redo for all n in c(10,100,1000)
abundance <- array(data=NA, dim=c(length(X), n, m))
for (i in 1:length(X))  # iterate over mean colony size
{
for (j in 1:n) # iterate over the colonies to be summed
{
abundance[i,j,] <- rlnorm(m,X[i],sigma)  # approximately but not exactly 10% error
}
}
median.abundance <- apply(abundance, c(1,2), FUN=median) # take the median abundance for each colony
sum.median <- apply(median.abundance, 1, sum)
sum.abundance <- apply(abundance, c(1,3), FUN=sum)
median.sum <- apply(sum.abundance, 1, median)
hist(median.sum)
hist(sum.median,add=T,col="red")
hist(sum.mean,add=T,col="green")
X <- seq(2, 12, 0.1)
sigma <- 0.10
m <- 1000
#########
n <- 10    # redo for all n in c(10,100,1000)
abundance <- array(data=NA, dim=c(length(X), n, m))
for (i in 1:length(X))  # iterate over mean colony size
{
for (j in 1:n) # iterate over the colonies to be summed
{
abundance[i,j,] <- rlnorm(m,X[i],sigma)  # approximately but not exactly 10% error
}
}
median.abundance <- apply(abundance, c(1,2), FUN=median) # take the median abundance for each colony
mean.abundance <- apply(abundance, c(1,2), FUN=mean) # take the median abundance for each colony
sum.median <- apply(median.abundance, 1, sum)
sum.mean <- apply(mean.abundance, 1, sum)
sum.abundance <- apply(abundance, c(1,3), FUN=sum)
median.sum <- apply(sum.abundance, 1, median)
mean.sum <- apply(sum.abundance, 1, mean)
X <- seq(2, 12, 0.1)
sigma <- 0.10
m <- 1000
#########
n <- 100    # redo for all n in c(10,100,1000)
abundance <- array(data=NA, dim=c(length(X), n, m))
for (i in 1:length(X))  # iterate over mean colony size
{
for (j in 1:n) # iterate over the colonies to be summed
{
abundance[i,j,] <- rlnorm(m,X[i],sigma)  # approximately but not exactly 10% error
}
}
median.abundance <- apply(abundance, c(1,2), FUN=median) # take the median abundance for each colony
mean.abundance <- apply(abundance, c(1,2), FUN=mean) # take the median abundance for each colony
sum.median <- apply(median.abundance, 1, sum)
sum.mean <- apply(mean.abundance, 1, sum)
sum.abundance <- apply(abundance, c(1,3), FUN=sum)
median.sum <- apply(sum.abundance, 1, median)
mean.sum <- apply(sum.abundance, 1, mean)
hist(sum.mean)
hist(sum.median,add=T,col="red")
median.sum
hist(median.sum,add=T,col="green")
n <- 100    # redo for all n in c(10,100,1000)
abundance <- array(data=NA, dim=c(n, m))
for (j in 1:n) # iterate over the colonies to be summed
{
abundance[j,] <- rlnorm(m,6,sigma)  # approximately but not exactly 10% error
}
median.abundance <- apply(abundance, 2, FUN=median) # take the median abundance for each colony
mean.abundance <- apply(abundance, 2, FUN=mean) # take the median abundance for each colony
sum.median <- sum(median.abundance)
sum.mean <- sum(mean.abundance)
sum.abundance <- apply(abundance, 1, FUN=sum)
median.sum <- median(sum.abundance)
mean.sum <- mean(sum.abundance)
n <- 100    # redo for all n in c(10,100,1000)
abundance <- array(data=NA, dim=c(n, m))
for (j in 1:n) # iterate over the colonies to be summed
{
abundance[j,] <- rlnorm(m,6,sigma)  # approximately but not exactly 10% error
}
median.abundance <- apply(abundance, 2, FUN=median) # take the median abundance for each colony
mean.abundance <- apply(abundance, 2, FUN=mean) # take the median abundance for each colony
sum.median <- sum(median.abundance)
sum.mean <- sum(mean.abundance)
sum.abundance <- apply(abundance, 1, FUN=sum)
median.sum <- median(sum.abundance)
mean.sum <- mean(sum.abundance)
hist(sum.mean)
hist(sum.median,add=T,col="red")
hist(median.sum,add=T,col="green")
hist(mean.sum,add=T,col="yellow")
mean.sum
median.sum
hist(sum.mean)
hist(sum.median,add=T,col="red")
abline(v=mean.sum,col="yellow")
abline(v=median,col="purple")
sum.median
sum.mean
hist(sum.abundance)
abline(v=mean.sum,col="yellow")
abline(v=median.sum,col="purple")
abline(v=sum.median,col="blue")
n <- 100    # redo for all n in c(10,100,1000)
abundance <- array(data=NA, dim=c(n, m))
for (j in 1:n) # iterate over the colonies to be summed
{
abundance[j,] <- rlnorm(m,8,sigma)  # approximately but not exactly 10% error
}
median.abundance <- apply(abundance, 2, FUN=median) # take the median abundance for each colony
mean.abundance <- apply(abundance, 2, FUN=mean) # take the median abundance for each colony
sum.median <- sum(median.abundance)
sum.mean <- sum(mean.abundance)
sum.abundance <- apply(abundance, 1, FUN=sum)
median.sum <- median(sum.abundance)
mean.sum <- mean(sum.abundance)
hist(sum.abundance)
abline(v=mean.sum,col="yellow",lwd=2)
abline(v=median.sum,col="purple",lwd=2)
abline(v=sum.median,col="blue",lwd=2)
sigma <- 0.20
sigma <- 0.20
n <- 100    # redo for all n in c(10,100,1000)
abundance <- array(data=NA, dim=c(n, m))
for (j in 1:n) # iterate over the colonies to be summed
{
abundance[j,] <- rlnorm(m,8,sigma)  # approximately but not exactly 10% error
}
median.abundance <- apply(abundance, 2, FUN=median) # take the median abundance for each colony
mean.abundance <- apply(abundance, 2, FUN=mean) # take the median abundance for each colony
sum.median <- sum(median.abundance)
sum.mean <- sum(mean.abundance)
sum.abundance <- apply(abundance, 1, FUN=sum)
median.sum <- median(sum.abundance)
mean.sum <- mean(sum.abundance)
hist(sum.abundance)
abline(v=mean.sum,col="yellow",lwd=2)
abline(v=median.sum,col="purple",lwd=2)
abline(v=sum.median,col="blue",lwd=2)
hist(sum.abundance,xlim=c(mean.sum-5*sd(sum.abundance),mean.sum+5*sd(sum.abundance)))
abline(v=mean.sum,col="yellow",lwd=2)
abline(v=median.sum,col="purple",lwd=2)
abline(v=sum.median,col="blue",lwd=2)
sigma <- 0.20
n <- 100    # redo for all n in c(10,100,1000)
abundance <- array(data=NA, dim=c(n, m))
for (j in 1:n) # iterate over the colonies to be summed
{
abundance[j,] <- rlnorm(m,8,sigma)  # approximately but not exactly 10% error
}
median.abundance <- apply(abundance, 2, FUN=median) # take the median abundance for each colony
mean.abundance <- apply(abundance, 2, FUN=mean) # take the median abundance for each colony
sum.median <- sum(median.abundance)
sum.mean <- sum(mean.abundance)
sum.abundance <- apply(abundance, 1, FUN=sum)
median.sum <- median(sum.abundance)
mean.sum <- mean(sum.abundance)
hist(sum.abundance,xlim=c(mean.sum-5*sd(sum.abundance),mean.sum+5*sd(sum.abundance)))
abline(v=mean.sum,col="yellow",lwd=2)
abline(v=median.sum,col="purple",lwd=2)
abline(v=sum.median,col="blue",lwd=2)
hist(sum.abundance,xlim=c(mean.sum-5*sd(sum.abundance),mean.sum+5*sd(sum.abundance)),breaks=30)
abline(v=mean.sum,col="yellow",lwd=2)
abline(v=median.sum,col="purple",lwd=2)
abline(v=sum.median,col="blue",lwd=2)
hist(sum.abundance,xlim=c(mean.sum-5*sd(sum.abundance),mean.sum+5*sd(sum.abundance)),breaks=20)
abline(v=mean.sum,col="yellow",lwd=2)
abline(v=median.sum,col="purple",lwd=2)
abline(v=sum.median,col="blue",lwd=2)
hist(sum.abundance,xlim=c(mean.sum-5*sd(sum.abundance),mean.sum+5*sd(sum.abundance)),breaks=15)
abline(v=mean.sum,col="yellow",lwd=2)
abline(v=median.sum,col="purple",lwd=2)
abline(v=sum.median,col="blue",lwd=2)
hist(sum.abundance,xlim=c(mean.sum-5*sd(sum.abundance),mean.sum+5*sd(sum.abundance)),breaks=15)
abline(v=mean.sum,col="yellow",lwd=2)
abline(v=median.sum,col="purple",lwd=2)
abline(v=sum.median,col="blue",lwd=2)
dim(median.abundance)
dim(abundance)
length(median.abundance)
m<-1000
sigma <- 0.10
n <- 100    # redo for all n in c(10,100,1000)
abundance <- array(data=NA, dim=c(n, m))
for (j in 1:n) # iterate over the colonies to be summed
{
abundance[j,] <- rlnorm(m,8,sigma)  # approximately but not exactly 10% error
}
median.abundance <- apply(abundance, 1, FUN=median) # take the median abundance for each colony
mean.abundance <- apply(abundance, 1, FUN=mean) # take the median abundance for each colony
sum.median <- sum(median.abundance)
sum.mean <- sum(mean.abundance)
sum.abundance <- apply(abundance, 2, FUN=sum)
median.sum <- median(sum.abundance)
mean.sum <- mean(sum.abundance)
hist(sum.abundance,xlim=c(mean.sum-5*sd(sum.abundance),mean.sum+5*sd(sum.abundance)),breaks=15)
abline(v=mean.sum,col="yellow",lwd=2)
abline(v=median.sum,col="purple",lwd=2)
abline(v=sum.median,col="blue",lwd=2)
length(median.abundance)
length(sum.abundance)
hist(sum.abundance,xlim=c(mean.sum-5*sd(sum.abundance),mean.sum+5*sd(sum.abundance)),breaks=15)
abline(v=mean.sum,col="yellow",lwd=2)
abline(v=median.sum,col="purple",lwd=2)
abline(v=sum.median,col="blue",lwd=2)
abline(v=sum.mean,col="green",lwd=2)
m<-1000
sigma <- 0.20
n <- 100    # redo for all n in c(10,100,1000)
abundance <- array(data=NA, dim=c(n, m))
for (j in 1:n) # iterate over the colonies to be summed
{
abundance[j,] <- rlnorm(m,8,sigma)  # approximately but not exactly 10% error
}
median.abundance <- apply(abundance, 1, FUN=median) # take the median abundance for each colony
mean.abundance <- apply(abundance, 1, FUN=mean) # take the median abundance for each colony
sum.median <- sum(median.abundance)
sum.mean <- sum(mean.abundance)
sum.abundance <- apply(abundance, 2, FUN=sum)
median.sum <- median(sum.abundance)
mean.sum <- mean(sum.abundance)
hist(sum.abundance,xlim=c(mean.sum-5*sd(sum.abundance),mean.sum+5*sd(sum.abundance)),breaks=15)
abline(v=mean.sum,col="yellow",lwd=2)
abline(v=median.sum,col="purple",lwd=2)
abline(v=sum.median,col="blue",lwd=2)
abline(v=sum.mean,col="green",lwd=2)
m<-1000
sigma <- 0.20
n <- 100    # redo for all n in c(10,100,1000)
abundance <- array(data=NA, dim=c(n, m))
for (j in 1:n) # iterate over the colonies to be summed
{
abundance[j,] <- rlnorm(m,9,sigma)  # approximately but not exactly 10% error
}
median.abundance <- apply(abundance, 1, FUN=median) # take the median abundance for each colony
mean.abundance <- apply(abundance, 1, FUN=mean) # take the median abundance for each colony
sum.median <- sum(median.abundance)
sum.mean <- sum(mean.abundance)
sum.abundance <- apply(abundance, 2, FUN=sum)
median.sum <- median(sum.abundance)
mean.sum <- mean(sum.abundance)
hist(sum.abundance,xlim=c(mean.sum-5*sd(sum.abundance),mean.sum+5*sd(sum.abundance)),breaks=15)
abline(v=mean.sum,col="yellow",lwd=2)
abline(v=median.sum,col="purple",lwd=2)
abline(v=sum.median,col="blue",lwd=2)
abline(v=sum.mean,col="green",lwd=2)
m<-1000
sigma <- 0.50
n <- 100    # redo for all n in c(10,100,1000)
abundance <- array(data=NA, dim=c(n, m))
for (j in 1:n) # iterate over the colonies to be summed
{
abundance[j,] <- rlnorm(m,9,sigma)  # approximately but not exactly 10% error
}
median.abundance <- apply(abundance, 1, FUN=median) # take the median abundance for each colony
mean.abundance <- apply(abundance, 1, FUN=mean) # take the median abundance for each colony
sum.median <- sum(median.abundance)
sum.mean <- sum(mean.abundance)
sum.abundance <- apply(abundance, 2, FUN=sum)
median.sum <- median(sum.abundance)
mean.sum <- mean(sum.abundance)
hist(sum.abundance,xlim=c(mean.sum-5*sd(sum.abundance),mean.sum+5*sd(sum.abundance)),breaks=15)
abline(v=mean.sum,col="yellow",lwd=2)
abline(v=median.sum,col="purple",lwd=2)
abline(v=sum.median,col="blue",lwd=2)
abline(v=sum.mean,col="green",lwd=2)
m<-1000
sigma <- 0.50
n <- 100    # redo for all n in c(10,100,1000)
abundance <- array(data=NA, dim=c(n, m))
for (j in 1:n) # iterate over the colonies to be summed
{
abundance[j,] <- rlnorm(m,10,sigma)  # approximately but not exactly 10% error
}
median.abundance <- apply(abundance, 1, FUN=median) # take the median abundance for each colony
mean.abundance <- apply(abundance, 1, FUN=mean) # take the median abundance for each colony
sum.median <- sum(median.abundance)
sum.mean <- sum(mean.abundance)
sum.abundance <- apply(abundance, 2, FUN=sum)
median.sum <- median(sum.abundance)
mean.sum <- mean(sum.abundance)
hist(sum.abundance,xlim=c(mean.sum-5*sd(sum.abundance),mean.sum+5*sd(sum.abundance)),breaks=15)
abline(v=mean.sum,col="yellow",lwd=2)
abline(v=median.sum,col="purple",lwd=2)
abline(v=sum.median,col="blue",lwd=2)
abline(v=sum.mean,col="green",lwd=2)
m<-1000
sigma <- 0.23
n <- 100    # redo for all n in c(10,100,1000)
abundance <- array(data=NA, dim=c(n, m))
for (j in 1:n) # iterate over the colonies to be summed
{
abundance[j,] <- rlnorm(m,10,sigma)  # approximately but not exactly 10% error
}
median.abundance <- apply(abundance, 1, FUN=median) # take the median abundance for each colony
mean.abundance <- apply(abundance, 1, FUN=mean) # take the median abundance for each colony
sum.median <- sum(median.abundance)
sum.mean <- sum(mean.abundance)
sum.abundance <- apply(abundance, 2, FUN=sum)
median.sum <- median(sum.abundance)
mean.sum <- mean(sum.abundance)
hist(sum.abundance,xlim=c(mean.sum-5*sd(sum.abundance),mean.sum+5*sd(sum.abundance)),breaks=15)
abline(v=mean.sum,col="yellow",lwd=2)
abline(v=median.sum,col="purple",lwd=2)
abline(v=sum.median,col="blue",lwd=2)
abline(v=sum.mean,col="green",lwd=2)
m<-1000
sigma <- 0.23
n <- 1000    # redo for all n in c(10,100,1000)
abundance <- array(data=NA, dim=c(n, m))
for (j in 1:n) # iterate over the colonies to be summed
{
abundance[j,] <- rlnorm(m,8,sigma)  # approximately but not exactly 10% error
}
median.abundance <- apply(abundance, 1, FUN=median) # take the median abundance for each colony
mean.abundance <- apply(abundance, 1, FUN=mean) # take the median abundance for each colony
sum.median <- sum(median.abundance)
sum.mean <- sum(mean.abundance)
sum.abundance <- apply(abundance, 2, FUN=sum)
median.sum <- median(sum.abundance)
mean.sum <- mean(sum.abundance)
hist(sum.abundance,xlim=c(mean.sum-5*sd(sum.abundance),mean.sum+5*sd(sum.abundance)),breaks=15)
abline(v=mean.sum,col="yellow",lwd=2)
abline(v=median.sum,col="purple",lwd=2)
abline(v=sum.median,col="blue",lwd=2)
abline(v=sum.mean,col="green",lwd=2)
m<-1000
sigma <- 0.23
n <- 1000    # redo for all n in c(10,100,1000)
abundance <- array(data=NA, dim=c(n, m))
for (j in 1:n) # iterate over the colonies to be summed
{
abundance[j,] <- rlnorm(m,8,sigma)  # approximately but not exactly 10% error
}
median.abundance <- apply(abundance, 1, FUN=median) # take the median abundance for each colony
mean.abundance <- apply(abundance, 1, FUN=mean) # take the median abundance for each colony
sum.median <- sum(median.abundance)
sum.mean <- sum(mean.abundance)
sum.abundance <- apply(abundance, 2, FUN=sum)
median.sum <- median(sum.abundance)
mean.sum <- mean(sum.abundance)
hist(sum.abundance,xlim=c(mean.sum-5*sd(sum.abundance),mean.sum+5*sd(sum.abundance)),breaks=15)
abline(v=mean.sum,col="yellow",lwd=2)
abline(v=median.sum,col="purple",lwd=2)
abline(v=sum.median,col="blue",lwd=2)
abline(v=sum.mean,col="green",lwd=2)
mean.sum
median.sum
sum.mean
log(3200/2400)
log(160)
log(482)
log(1482)
log(558)
log(330)
log(1992)
log(1)
install.packages("flashCard")
df1 <- data.frame(front = c("Title front","contentfront", "content second line"),back =c("Title back","content back", "second line"))
flashCard(df1, elementId = "card", front_text_color = "grey")
library("flashCard", lib.loc="/Library/Frameworks/R.framework/Versions/4.0/Resources/library")
df1 <- data.frame(front = c("Title front","contentfront", "content second line"),back =c("Title back","content back", "second line"))
flashCard(df1, elementId = "card", front_text_color = "grey")
?renderFlashCard
setwd("~/Documents/Projects/Biometry2021")
bookdown::render_book("index.Rmd")
