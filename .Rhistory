mean.abundance <- apply(abundance, 1, FUN=mean) # take the median abundance for each colony
sum.median <- sum(median.abundance)
sum.mean <- sum(mean.abundance)
sum.abundance <- apply(abundance, 2, FUN=sum)
median.sum <- median(sum.abundance)
mean.sum <- mean(sum.abundance)
hist(sum.abundance,xlim=c(mean.sum-5*sd(sum.abundance),mean.sum+5*sd(sum.abundance)),breaks=15)
abline(v=mean.sum,col="yellow",lwd=2)
abline(v=median.sum,col="purple",lwd=2)
abline(v=sum.median,col="blue",lwd=2)
length(median.abundance)
length(sum.abundance)
hist(sum.abundance,xlim=c(mean.sum-5*sd(sum.abundance),mean.sum+5*sd(sum.abundance)),breaks=15)
abline(v=mean.sum,col="yellow",lwd=2)
abline(v=median.sum,col="purple",lwd=2)
abline(v=sum.median,col="blue",lwd=2)
abline(v=sum.mean,col="green",lwd=2)
m<-1000
sigma <- 0.20
n <- 100    # redo for all n in c(10,100,1000)
abundance <- array(data=NA, dim=c(n, m))
for (j in 1:n) # iterate over the colonies to be summed
{
abundance[j,] <- rlnorm(m,8,sigma)  # approximately but not exactly 10% error
}
median.abundance <- apply(abundance, 1, FUN=median) # take the median abundance for each colony
mean.abundance <- apply(abundance, 1, FUN=mean) # take the median abundance for each colony
sum.median <- sum(median.abundance)
sum.mean <- sum(mean.abundance)
sum.abundance <- apply(abundance, 2, FUN=sum)
median.sum <- median(sum.abundance)
mean.sum <- mean(sum.abundance)
hist(sum.abundance,xlim=c(mean.sum-5*sd(sum.abundance),mean.sum+5*sd(sum.abundance)),breaks=15)
abline(v=mean.sum,col="yellow",lwd=2)
abline(v=median.sum,col="purple",lwd=2)
abline(v=sum.median,col="blue",lwd=2)
abline(v=sum.mean,col="green",lwd=2)
m<-1000
sigma <- 0.20
n <- 100    # redo for all n in c(10,100,1000)
abundance <- array(data=NA, dim=c(n, m))
for (j in 1:n) # iterate over the colonies to be summed
{
abundance[j,] <- rlnorm(m,9,sigma)  # approximately but not exactly 10% error
}
median.abundance <- apply(abundance, 1, FUN=median) # take the median abundance for each colony
mean.abundance <- apply(abundance, 1, FUN=mean) # take the median abundance for each colony
sum.median <- sum(median.abundance)
sum.mean <- sum(mean.abundance)
sum.abundance <- apply(abundance, 2, FUN=sum)
median.sum <- median(sum.abundance)
mean.sum <- mean(sum.abundance)
hist(sum.abundance,xlim=c(mean.sum-5*sd(sum.abundance),mean.sum+5*sd(sum.abundance)),breaks=15)
abline(v=mean.sum,col="yellow",lwd=2)
abline(v=median.sum,col="purple",lwd=2)
abline(v=sum.median,col="blue",lwd=2)
abline(v=sum.mean,col="green",lwd=2)
m<-1000
sigma <- 0.50
n <- 100    # redo for all n in c(10,100,1000)
abundance <- array(data=NA, dim=c(n, m))
for (j in 1:n) # iterate over the colonies to be summed
{
abundance[j,] <- rlnorm(m,9,sigma)  # approximately but not exactly 10% error
}
median.abundance <- apply(abundance, 1, FUN=median) # take the median abundance for each colony
mean.abundance <- apply(abundance, 1, FUN=mean) # take the median abundance for each colony
sum.median <- sum(median.abundance)
sum.mean <- sum(mean.abundance)
sum.abundance <- apply(abundance, 2, FUN=sum)
median.sum <- median(sum.abundance)
mean.sum <- mean(sum.abundance)
hist(sum.abundance,xlim=c(mean.sum-5*sd(sum.abundance),mean.sum+5*sd(sum.abundance)),breaks=15)
abline(v=mean.sum,col="yellow",lwd=2)
abline(v=median.sum,col="purple",lwd=2)
abline(v=sum.median,col="blue",lwd=2)
abline(v=sum.mean,col="green",lwd=2)
m<-1000
sigma <- 0.50
n <- 100    # redo for all n in c(10,100,1000)
abundance <- array(data=NA, dim=c(n, m))
for (j in 1:n) # iterate over the colonies to be summed
{
abundance[j,] <- rlnorm(m,10,sigma)  # approximately but not exactly 10% error
}
median.abundance <- apply(abundance, 1, FUN=median) # take the median abundance for each colony
mean.abundance <- apply(abundance, 1, FUN=mean) # take the median abundance for each colony
sum.median <- sum(median.abundance)
sum.mean <- sum(mean.abundance)
sum.abundance <- apply(abundance, 2, FUN=sum)
median.sum <- median(sum.abundance)
mean.sum <- mean(sum.abundance)
hist(sum.abundance,xlim=c(mean.sum-5*sd(sum.abundance),mean.sum+5*sd(sum.abundance)),breaks=15)
abline(v=mean.sum,col="yellow",lwd=2)
abline(v=median.sum,col="purple",lwd=2)
abline(v=sum.median,col="blue",lwd=2)
abline(v=sum.mean,col="green",lwd=2)
m<-1000
sigma <- 0.23
n <- 100    # redo for all n in c(10,100,1000)
abundance <- array(data=NA, dim=c(n, m))
for (j in 1:n) # iterate over the colonies to be summed
{
abundance[j,] <- rlnorm(m,10,sigma)  # approximately but not exactly 10% error
}
median.abundance <- apply(abundance, 1, FUN=median) # take the median abundance for each colony
mean.abundance <- apply(abundance, 1, FUN=mean) # take the median abundance for each colony
sum.median <- sum(median.abundance)
sum.mean <- sum(mean.abundance)
sum.abundance <- apply(abundance, 2, FUN=sum)
median.sum <- median(sum.abundance)
mean.sum <- mean(sum.abundance)
hist(sum.abundance,xlim=c(mean.sum-5*sd(sum.abundance),mean.sum+5*sd(sum.abundance)),breaks=15)
abline(v=mean.sum,col="yellow",lwd=2)
abline(v=median.sum,col="purple",lwd=2)
abline(v=sum.median,col="blue",lwd=2)
abline(v=sum.mean,col="green",lwd=2)
m<-1000
sigma <- 0.23
n <- 1000    # redo for all n in c(10,100,1000)
abundance <- array(data=NA, dim=c(n, m))
for (j in 1:n) # iterate over the colonies to be summed
{
abundance[j,] <- rlnorm(m,8,sigma)  # approximately but not exactly 10% error
}
median.abundance <- apply(abundance, 1, FUN=median) # take the median abundance for each colony
mean.abundance <- apply(abundance, 1, FUN=mean) # take the median abundance for each colony
sum.median <- sum(median.abundance)
sum.mean <- sum(mean.abundance)
sum.abundance <- apply(abundance, 2, FUN=sum)
median.sum <- median(sum.abundance)
mean.sum <- mean(sum.abundance)
hist(sum.abundance,xlim=c(mean.sum-5*sd(sum.abundance),mean.sum+5*sd(sum.abundance)),breaks=15)
abline(v=mean.sum,col="yellow",lwd=2)
abline(v=median.sum,col="purple",lwd=2)
abline(v=sum.median,col="blue",lwd=2)
abline(v=sum.mean,col="green",lwd=2)
m<-1000
sigma <- 0.23
n <- 1000    # redo for all n in c(10,100,1000)
abundance <- array(data=NA, dim=c(n, m))
for (j in 1:n) # iterate over the colonies to be summed
{
abundance[j,] <- rlnorm(m,8,sigma)  # approximately but not exactly 10% error
}
median.abundance <- apply(abundance, 1, FUN=median) # take the median abundance for each colony
mean.abundance <- apply(abundance, 1, FUN=mean) # take the median abundance for each colony
sum.median <- sum(median.abundance)
sum.mean <- sum(mean.abundance)
sum.abundance <- apply(abundance, 2, FUN=sum)
median.sum <- median(sum.abundance)
mean.sum <- mean(sum.abundance)
hist(sum.abundance,xlim=c(mean.sum-5*sd(sum.abundance),mean.sum+5*sd(sum.abundance)),breaks=15)
abline(v=mean.sum,col="yellow",lwd=2)
abline(v=median.sum,col="purple",lwd=2)
abline(v=sum.median,col="blue",lwd=2)
abline(v=sum.mean,col="green",lwd=2)
mean.sum
median.sum
sum.mean
candy_color<-c("brown","yellow","green","red","orange","blue")
company<-c(0.14,0.14,0.16,0.13,0.19,0.24)
my_bag<-c(1,1,2,2,10,7)
color_prob<-data.frame(candy_color,company,my_bag,stringsAsFactors = FALSE)
head(color_prob)
sample(size=29,
color_prob$candy_color,
prob=color_prob$company,
replace=TRUE))
sample(size=29,
color_prob$candy_color,
prob=color_prob$company,
replace=TRUE)
color_prob$candy_color
for (i in 1:100){
if((table(sample(size=29,
color_prob$candy_color,
prob=color_prob$company,
replace=TRUE)))==color_prob$my_bag){
print(1)
} else print(0)
}
sample(size=29,
color_prob$candy_color,
prob=color_prob$company,
replace=TRUE)
color_prob$my_bag
table(sample(size=29,
color_prob$candy_color,
prob=color_prob$company,
replace=TRUE))
my_bag<-sample(size=29,
color_prob$candy_color,
prob=color_prob$company,
replace=TRUE)
my_bag
may_bag=="red"
my_bag=="red"
as.numeric(my_bag=="red")
sum(as.numeric(my_bag=="red"))
number.red<-sum(as.numeric(my_bag=="red"))
library("boot", lib.loc="/Library/Frameworks/R.framework/Versions/4.0/Resources/library")
darwin
hist(darwin)
hist(darwin$y)
sort(darwin$y)
rnorm(10)
temp<-rnorm(10)
temp
rank(temp)
temp2<-rnorm(10)
rank(temp2)
cor.test(temp,temp2)
cor.test(temp,temp2,method="spearman")
cor.test(rank(temp),rank(temp2))
data(webs)
library(ggplot2)
data(webs)
?webs
?asbio
library(asbio)
data(webs)
y.bar <- mean(webs[, 2])
ggplot(data = webs, aes(x = 0, y = length)) + geom_point(col = "gray37") +
geom_hline(aes(yintercept = mean(length)), col = "dodgerblue1") +
annotate('text', x = 0.001, y = y.bar, label = "bar(Y)", parse = TRUE, size = 5, col ="dodgerblue1") +
labs(x = "", y = "Relative length of spider webs") + theme_classic() +
theme(axis.title.x = element_blank(), axis.text.x = element_blank(), axis.ticks.x = element_blank(), text = element_text(size = text.size))
data(webs)
ggplot(data = webs, aes(x = 1, y = temp.C)) + geom_point(col = "gray37") + labs(x = "", y = "Relative length of spider webs") + theme_classic() +  theme(axis.title.x = element_blank(), axis.text.x = element_blank(), axis.ticks.x = element_blank(), text = element_text(size = text.size))
text.size <- 14
data(webs)
ggplot(data = webs, aes(x = 1, y = temp.C)) + geom_point(col = "gray37") + labs(x = "", y = "Relative length of spider webs") + theme_classic() +  theme(axis.title.x = element_blank(), axis.text.x = element_blank(), axis.ticks.x = element_blank(), text = element_text(size = text.size))
y.bar <- mean(webs[, 2])
ggplot(data = webs, aes(x = 0, y = length)) + geom_point(col = "gray37") +
geom_hline(aes(yintercept = mean(length)), col = "dodgerblue1") +
annotate('text', x = 0.001, y = y.bar, label = "bar(Y)", parse = TRUE, size = 5, col ="dodgerblue1") +
labs(x = "", y = "Relative length of spider webs") + theme_classic() +
theme(axis.title.x = element_blank(), axis.text.x = element_blank(), axis.ticks.x = element_blank(), text = element_text(size = text.size))
y.bar <- mean(webs[, 2])
ggplot(data = webs, aes(x = 1, y = temp.C)) + geom_point(col = "gray37") +
geom_hline(aes(yintercept = mean(length)), col = "dodgerblue1") +
annotate('text', x = 0.01, y = y.bar, label = "bar(Y)", parse = TRUE, size = 5, col ="dodgerblue1") +
labs(x = "", y = "Relative length of spider webs") + theme_classic() +
theme(axis.title.x = element_blank(), axis.text.x = element_blank(), axis.ticks.x = element_blank(), text = element_text(size = text.size))
y.bar <- mean(webs[, 2])
ggplot(data = webs, aes(x = 0, y = temp.C)) + geom_point(col = "gray37") +
geom_hline(aes(yintercept = mean(length)), col = "dodgerblue1") +
annotate('text', x = 0.01, y = y.bar, label = "bar(Y)", parse = TRUE, size = 5, col ="dodgerblue1") +
labs(x = "", y = "Relative length of spider webs") + theme_classic() +
theme(axis.title.x = element_blank(), axis.text.x = element_blank(), axis.ticks.x = element_blank(), text = element_text(size = text.size))
webs
y.bar <- mean(webs[, 2])
ggplot(data = webs, aes(x = 0, y = webs$length)) + geom_point(col = "gray37") +
geom_hline(aes(yintercept = mean(webs$length)), col = "dodgerblue1") +
annotate('text', x = 0.01, y = y.bar, label = "bar(Y)", parse = TRUE, size = 5, col ="dodgerblue1") +
labs(x = "", y = "Relative length of spider webs") + theme_classic() +
theme(axis.title.x = element_blank(), axis.text.x = element_blank(), axis.ticks.x = element_blank(), text = element_text(size = text.size))
y.bar <- mean(webs[, 2])
ggplot(data = webs, aes(x = 0, y = length)) + geom_point(col = "gray37") +
geom_hline(aes(yintercept = mean(length)), col = "dodgerblue1") +
annotate('text', x = 0.01, y = y.bar, label = "bar(Y)", parse = TRUE, size = 5, col ="dodgerblue1") +
labs(x = "", y = "Relative length of spider webs") + theme_classic()
y.bar <- mean(webs[, 2])
ggplot(data = webs, aes(x = 0, y = length)) + geom_point(col = "gray37") +
geom_hline(aes(yintercept = mean(length)), col = "dodgerblue1") +
annotate('text', x = 0.01, y = y.bar, label = "bar(Y)", parse = TRUE, size = 5, col ="dodgerblue1")
y.bar <- mean(webs[, 2])
ggplot(data = webs, aes(x = 0, y = length)) + geom_point(col = "gray37") +
geom_hline(aes(yintercept = mean(length)), col = "dodgerblue1")
data(webs)
ggplot(data = webs, aes(x = 1, y = temp.C)) + geom_point(col = "gray37") + labs(x = "", y = "Relative length of spider webs") + theme_classic() +  theme(axis.title.x = element_blank(), axis.text.x = element_blank(), axis.ticks.x = element_blank(), text = element_text(size = text.size))
y.bar <- mean(webs[, 2])
ggplot(data = webs, aes(x = 0, y = temp.C)) + geom_point(col = "gray37") +
geom_hline(aes(yintercept = mean(length)), col = "dodgerblue1")
webs
data(webs)
ggplot(data = webs, aes(x = 1, y = length)) + geom_point(col = "gray37") + labs(x = "", y = "Relative length of spider webs") + theme_classic() +  theme(axis.title.x = element_blank(), axis.text.x = element_blank(), axis.ticks.x = element_blank(), text = element_text(size = text.size))
y.bar <- mean(webs[, 2])
ggplot(data = webs, aes(x = 0, y = length)) + geom_point(col = "gray37") +
geom_hline(aes(yintercept = mean(length)), col = "dodgerblue1") +
annotate('text', x = 0.01, y = y.bar, label = "bar(Y)", parse = TRUE, size = 5, col ="dodgerblue1") +
labs(x = "", y = "Relative length of spider webs") + theme_classic() +
theme(axis.title.x = element_blank(), axis.text.x = element_blank(), axis.ticks.x = element_blank(), text = element_text(size = text.size))
y.bar <- mean(webs[, 2])
ggplot(data = webs, aes(x = 0, y = length)) + geom_point(col = "gray37") +
geom_hline(aes(yintercept = mean(length)), col = "dodgerblue1") +
annotate('text', x = 0.1, y = y.bar, label = "bar(Y)", parse = TRUE, size = 5, col ="dodgerblue1") +
labs(x = "", y = "Relative length of spider webs") + theme_classic() +
theme(axis.title.x = element_blank(), axis.text.x = element_blank(), axis.ticks.x = element_blank(), text = element_text(size = text.size))
y.bar <- mean(webs[, 2])
ggplot(data = webs, aes(x = 0, y = length)) + geom_point(col = "gray37") +
geom_hline(aes(yintercept = mean(length)), col = "dodgerblue1") +
annotate('text', x = 0.01, y = y.bar+0.01, label = "bar(Y)", parse = TRUE, size = 5, col ="dodgerblue1") +
labs(x = "", y = "Relative length of spider webs") + theme_classic() +
theme(axis.title.x = element_blank(), axis.text.x = element_blank(), axis.ticks.x = element_blank(), text = element_text(size = text.size))
y.bar <- mean(webs[, 2])
ggplot(data = webs, aes(x = 0, y = length)) + geom_point(col = "gray37") +
geom_hline(aes(yintercept = mean(length)), col = "dodgerblue1") +
annotate('text', x = 0.01, y = y.bar+0.001, label = "bar(Y)", parse = TRUE, size = 5, col ="dodgerblue1") +
labs(x = "", y = "Relative length of spider webs") + theme_classic() +
theme(axis.title.x = element_blank(), axis.text.x = element_blank(), axis.ticks.x = element_blank(), text = element_text(size = text.size))
y.bar <- mean(webs[, 2])
ggplot(data = webs, aes(x = 0, y = length)) + geom_point(col = "gray37") +
geom_hline(aes(yintercept = mean(length)), col = "dodgerblue1") +
annotate('text', x = 0.01, y = y.bar+0.0001, label = "bar(Y)", parse = TRUE, size = 5, col ="dodgerblue1") +
labs(x = "", y = "Relative length of spider webs") + theme_classic() +
theme(axis.title.x = element_blank(), axis.text.x = element_blank(), axis.ticks.x = element_blank(), text = element_text(size = text.size))
web.fit <- lm(formula = length ~ temp.C, data = webs)
ggplot(data = webs, aes(x = temp.C, y = length)) + geom_point(col = "gray37") +
geom_hline(aes(yintercept = mean(length)), col = "dodgerblue1") +
geom_abline(intercept = web.fit$coefficients[1], slope = web.fit$coefficients[2], col = "palegreen1") +
annotate('text', x = 12, y = y.bar, label = "bar(Y)", parse = TRUE, size = 5, col ="dodgerblue1") +
labs(x = "Temperature (in C)", y = "Relative length of spider webs") + theme_classic() + theme(text = element_text(size = text.size))
webs$CIl <- predict(web.fit, interval = "confidence")[, 2]
webs$CIu <- predict(web.fit, interval = "confidence")[, 3]
webs$PIl <- predict(web.fit, interval = "prediction")[, 2]
webs$PIu <- predict(web.fit, interval = "prediction")[, 3]
ggplot(data = webs, aes(x = temp.C, y = length)) + geom_point(col = "gray37") +
geom_line(aes(x = temp.C, y = CIl), linetype = "dashed", col = "dodgerblue1") +
geom_line(aes(x = temp.C, y = CIu), linetype = "dashed", col = "dodgerblue1") +
geom_line(aes(x = temp.C, y = PIl), linetype = "dotted", col = "slateblue1") +
geom_line(aes(x = temp.C, y = PIu), linetype = "dotted", col = "slateblue1") +
geom_abline(intercept = web.fit$coefficients[1], slope = web.fit$coefficients[2], col = "palegreen1") +
labs(x = "Temperature (in C)", y = "Relative length of spider webs") + theme_classic() + theme(text = element_text(size = text.size))
nrow(web)
nrow(webs)
for (i in 1:100)
{
selection<-sample(1:nrows(webs),replace=T)
webs.bootstrapped<-webs[selection,]
web.fit.new <- lm(formula = length ~ temp.C, data = webs.bootstrapped)
geom_abline(intercept = web.fit.new$coefficients[1], slope = web.fit.new$coefficients[2], col = "palegreen1")
}
for (i in 1:100)
{
selection<-sample(1:nrow(webs),replace=T)
webs.bootstrapped<-webs[selection,]
web.fit.new <- lm(formula = length ~ temp.C, data = webs.bootstrapped)
geom_abline(intercept = web.fit.new$coefficients[1], slope = web.fit.new$coefficients[2], col = "palegreen1")
}
web.fit.new
?geom_abline
webs$CIl <- predict(web.fit, interval = "confidence")[, 2]
webs$CIu <- predict(web.fit, interval = "confidence")[, 3]
webs$PIl <- predict(web.fit, interval = "prediction")[, 2]
webs$PIu <- predict(web.fit, interval = "prediction")[, 3]
p<-ggplot(data = webs, aes(x = temp.C, y = length)) + geom_point(col = "gray37") +
geom_line(aes(x = temp.C, y = CIl), linetype = "dashed", col = "dodgerblue1") +
geom_line(aes(x = temp.C, y = CIu), linetype = "dashed", col = "dodgerblue1") +
geom_line(aes(x = temp.C, y = PIl), linetype = "dotted", col = "slateblue1") +
geom_line(aes(x = temp.C, y = PIu), linetype = "dotted", col = "slateblue1") +
geom_abline(intercept = web.fit$coefficients[1], slope = web.fit$coefficients[2], col = "palegreen1") +
labs(x = "Temperature (in C)", y = "Relative length of spider webs") + theme_classic() + theme(text = element_text(size = text.size))
for (i in 1:100)
{
selection<-sample(1:nrow(webs),replace=T)
webs.bootstrapped<-webs[selection,]
web.fit.new <- lm(formula = length ~ temp.C, data = webs.bootstrapped)
p+geom_abline(intercept = web.fit.new$coefficients[1], slope = web.fit.new$coefficients[2], col = "palegreen1")
}
plot(p)
webs$CIl <- predict(web.fit, interval = "confidence")[, 2]
webs$CIu <- predict(web.fit, interval = "confidence")[, 3]
webs$PIl <- predict(web.fit, interval = "prediction")[, 2]
webs$PIu <- predict(web.fit, interval = "prediction")[, 3]
p<-ggplot(data = webs, aes(x = temp.C, y = length)) + geom_point(col = "gray37") +
geom_line(aes(x = temp.C, y = CIl), linetype = "dashed", col = "dodgerblue1") +
geom_line(aes(x = temp.C, y = CIu), linetype = "dashed", col = "dodgerblue1") +
geom_line(aes(x = temp.C, y = PIl), linetype = "dotted", col = "slateblue1") +
geom_line(aes(x = temp.C, y = PIu), linetype = "dotted", col = "slateblue1") +
geom_abline(intercept = web.fit$coefficients[1], slope = web.fit$coefficients[2], col = "palegreen1") +
labs(x = "Temperature (in C)", y = "Relative length of spider webs") + theme_classic() + theme(text = element_text(size = text.size))
for (i in 1:100)
{
selection<-sample(1:nrow(webs),replace=T)
webs.bootstrapped<-webs[selection,]
web.fit.new <- lm(formula = length ~ temp.C, data = webs.bootstrapped)
p<-p+geom_abline(intercept = web.fit.new$coefficients[1], slope = web.fit.new$coefficients[2], col = "palegreen1")
}
plot(p)
webs$CIl <- predict(web.fit, interval = "confidence")[, 2]
webs$CIu <- predict(web.fit, interval = "confidence")[, 3]
webs$PIl <- predict(web.fit, interval = "prediction")[, 2]
webs$PIu <- predict(web.fit, interval = "prediction")[, 3]
p<-ggplot(data = webs, aes(x = temp.C, y = length)) + geom_point(col = "gray37") +
labs(x = "Temperature (in C)", y = "Relative length of spider webs") + theme_classic() + theme(text = element_text(size = text.size))
for (i in 1:100)
{
selection<-sample(1:nrow(webs),replace=T)
webs.bootstrapped<-webs[selection,]
web.fit.new <- lm(formula = length ~ temp.C, data = webs.bootstrapped)
p<-p+geom_abline(intercept = web.fit.new$coefficients[1], slope = web.fit.new$coefficients[2], col = "palegreen1")
}
p<-p+ geom_line(aes(x = temp.C, y = PIl), linetype = "dotted", col = "slateblue1") +
geom_line(aes(x = temp.C, y = PIu), linetype = "dotted", col = "slateblue1")
plot(p)
webs$CIl <- predict(web.fit, interval = "confidence")[, 2]
webs$CIu <- predict(web.fit, interval = "confidence")[, 3]
webs$PIl <- predict(web.fit, interval = "prediction")[, 2]
webs$PIu <- predict(web.fit, interval = "prediction")[, 3]
p<-ggplot(data = webs, aes(x = temp.C, y = length)) + geom_point(col = "gray37") +
labs(x = "Temperature (in C)", y = "Relative length of spider webs") + theme_classic() + theme(text = element_text(size = text.size))
for (i in 1:100)
{
selection<-sample(1:nrow(webs),replace=T)
webs.bootstrapped<-webs[selection,]
web.fit.new <- lm(formula = length ~ temp.C, data = webs.bootstrapped)
p<-p+geom_abline(intercept = web.fit.new$coefficients[1], slope = web.fit.new$coefficients[2], col = "palegreen1")
}
p<-p+ geom_line(aes(x = temp.C, y = CIl), linetype = "dashed", col = "dodgerblue1") +
geom_line(aes(x = temp.C, y = CIu), linetype = "dashed", col = "dodgerblue1") +
plot(p)
webs$CIl <- predict(web.fit, interval = "confidence")[, 2]
webs$CIu <- predict(web.fit, interval = "confidence")[, 3]
webs$PIl <- predict(web.fit, interval = "prediction")[, 2]
webs$PIu <- predict(web.fit, interval = "prediction")[, 3]
p<-ggplot(data = webs, aes(x = temp.C, y = length)) + geom_point(col = "gray37") +
labs(x = "Temperature (in C)", y = "Relative length of spider webs") + theme_classic() + theme(text = element_text(size = text.size))
for (i in 1:100)
{
selection<-sample(1:nrow(webs),replace=T)
webs.bootstrapped<-webs[selection,]
web.fit.new <- lm(formula = length ~ temp.C, data = webs.bootstrapped)
p<-p+geom_abline(intercept = web.fit.new$coefficients[1], slope = web.fit.new$coefficients[2], col = "palegreen1")
}
p<-p+ geom_line(aes(x = temp.C, y = CIl), linetype = "dashed", col = "dodgerblue1") +
geom_line(aes(x = temp.C, y = CIu), linetype = "dashed", col = "dodgerblue1")
plot(p)
setwd("~/Documents/Projects/Biometry2021")
bookdown::render_book("index.Rmd")
bookdown::render_book("index.Rmd")
webs$CIl <- predict(web.fit, interval = "confidence")[, 2]
webs$CIu <- predict(web.fit, interval = "confidence")[, 3]
webs$PIl <- predict(web.fit, interval = "prediction")[, 2]
webs$PIu <- predict(web.fit, interval = "prediction")[, 3]
p<-ggplot(data = webs, aes(x = temp.C, y = length)) + geom_point(col = "gray37") +
labs(x = "Temperature (in C)", y = "Relative length of spider webs") + theme_classic() + theme(text = element_text(size = text.size))
for (i in 1:100)
{
selection<-sample(1:nrow(webs),replace=T)
webs.bootstrapped<-webs[selection,]
web.fit.new <- lm(formula = length ~ temp.C, data = webs.bootstrapped)
p<-p+geom_abline(intercept = web.fit.new$coefficients[1], slope = web.fit.new$coefficients[2], col = "palegreen1")
}
p<-p+ geom_line(aes(x = temp.C, y = CIl), linetype = "dashed", col = "dodgerblue1") +
geom_line(aes(x = temp.C, y = CIu), linetype = "dashed", col = "dodgerblue1")  +
geom_line(aes(x = temp.C, y = CIl), linetype = "dashed", col = "dodgerblue1") +
geom_line(aes(x = temp.C, y = CIu), linetype = "dashed", col = "dodgerblue1")
plot(p)
webs$CIl <- predict(web.fit, interval = "confidence")[, 2]
webs$CIu <- predict(web.fit, interval = "confidence")[, 3]
webs$PIl <- predict(web.fit, interval = "prediction")[, 2]
webs$PIu <- predict(web.fit, interval = "prediction")[, 3]
p<-ggplot(data = webs, aes(x = temp.C, y = length)) + geom_point(col = "gray37") +
labs(x = "Temperature (in C)", y = "Relative length of spider webs") + theme_classic() + theme(text = element_text(size = text.size))
for (i in 1:100)
{
selection<-sample(1:nrow(webs),replace=T)
webs.bootstrapped<-webs[selection,]
web.fit.new <- lm(formula = length ~ temp.C, data = webs.bootstrapped)
p<-p+geom_abline(intercept = web.fit.new$coefficients[1], slope = web.fit.new$coefficients[2], col = "palegreen1")
}
p<-p+ geom_line(aes(x = temp.C, y = CIl), linetype = "dashed", col = "dodgerblue1") +
geom_line(aes(x = temp.C, y = CIu), linetype = "dashed", col = "dodgerblue1")  +
geom_line(aes(x = temp.C, y = PIl), linetype = "dotted", col = "slateblue1") +
geom_line(aes(x = temp.C, y = PIu), linetype = "dotted", col = "slateblue1")
plot(p)
webs$CIl <- predict(web.fit, interval = "confidence")[, 2]
webs$CIu <- predict(web.fit, interval = "confidence")[, 3]
webs$PIl <- predict(web.fit, interval = "prediction")[, 2]
webs$PIu <- predict(web.fit, interval = "prediction")[, 3]
p<-ggplot(data = webs, aes(x = temp.C, y = length)) + geom_point(col = "gray37") +
geom_line(aes(x = temp.C, y = CIl), linetype = "dashed", col = "dodgerblue1") +
geom_line(aes(x = temp.C, y = CIu), linetype = "dashed", col = "dodgerblue1") +
geom_line(aes(x = temp.C, y = PIl), linetype = "dotted", col = "slateblue1") +
geom_line(aes(x = temp.C, y = PIu), linetype = "dotted", col = "slateblue1") +
labs(x = "Temperature (in C)", y = "Relative length of spider webs") + theme_classic() + theme(text = element_text(size = text.size))
for (i in 1:100)
{
selection<-sample(1:nrow(webs),replace=T)
webs.bootstrapped<-webs[selection,]
web.fit.new <- lm(formula = length ~ temp.C, data = webs.bootstrapped)
p<-p+geom_abline(intercept = web.fit.new$coefficients[1], slope = web.fit.new$coefficients[2], col = "palegreen1")
}
p<-p+ geom_line(aes(x = temp.C, y = CIl), linetype = "dashed", col = "dodgerblue1") +
geom_line(aes(x = temp.C, y = CIu), linetype = "dashed", col = "dodgerblue1")  +
geom_line(aes(x = temp.C, y = PIl), linetype = "dotted", col = "slateblue1") +
geom_line(aes(x = temp.C, y = PIu), linetype = "dotted", col = "slateblue1")
plot(p)
webs$CIl <- predict(web.fit, interval = "confidence")[, 2]
webs$CIu <- predict(web.fit, interval = "confidence")[, 3]
webs$PIl <- predict(web.fit, interval = "prediction")[, 2]
webs$PIu <- predict(web.fit, interval = "prediction")[, 3]
ggplot(data = webs, aes(x = temp.C, y = length)) + geom_point(col = "gray37") +
geom_line(aes(x = temp.C, y = CIl), linetype = "dashed", col = "dodgerblue1") +
geom_line(aes(x = temp.C, y = CIu), linetype = "dashed", col = "dodgerblue1") +
geom_line(aes(x = temp.C, y = PIl), linetype = "dotted", col = "slateblue1") +
geom_line(aes(x = temp.C, y = PIu), linetype = "dotted", col = "slateblue1") +
geom_abline(intercept = web.fit$coefficients[1], slope = web.fit$coefficients[2], col = "palegreen1") +
labs(x = "Temperature (in C)", y = "Relative length of spider webs") + theme_classic() + theme(text = element_text(size = text.size))
setwd("~/Documents/Projects/Biometry2021")
bookdown::render_book("index.Rmd")
bookdown::render_book("index.Rmd")
9/22.8
tanh(9/22.8)
tan(0.375)
tanh(9/22.8)*(360/2*3.14)
tanh(9/22.8)*(360/(2*3.14))
tanh(47/90.93)*(360/(2*3.14))
827.50*2
827.50/2
