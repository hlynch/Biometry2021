?images
?image
?contour
image(x=x,y=n,H,xlab="Assymmetry",ylab="Group size",col=topo.colors(30))
contour(x=x,y=n,H,add=T,levels=seq(0,10,1))
contour(x=x,y=n,H,add=T,levels=seq(0,10,0.1))
image(x=x,y=n,H,xlab="% that lead PI controls",ylab="Group size",col=topo.colors(30))
contour(x=x,y=n,H,add=T,levels=seq(0,10,0.1))
X <- seq(2, 12, 0.1)
sigma <- 0.10
m <- 1000
#########
n <- 10    # redo for all n in c(10,100,1000)
abundance <- array(data=NA, dim=c(length(X), n, m))
for (i in 1:length(X))  # iterate over mean colony size
{
for (j in 1:n) # iterate over the colonies to be summed
{
abundance[i,j,] <- rlnorm(m,X[i],sigma)  # approximately but not exactly 10% error
}
}
median.abundance <- apply(abundance, c(1,2), FUN=median) # take the median abundance for each colony
sum.median <- apply(median.abundance, 1, sum)
sum.abundance <- apply(abundance, c(1,3), FUN=sum)
median.sum <- apply(sum.abundance, 1, median)
hist(median.sum)
hist(sum.median,add=T,col="red")
hist(sum.mean,add=T,col="green")
X <- seq(2, 12, 0.1)
sigma <- 0.10
m <- 1000
#########
n <- 10    # redo for all n in c(10,100,1000)
abundance <- array(data=NA, dim=c(length(X), n, m))
for (i in 1:length(X))  # iterate over mean colony size
{
for (j in 1:n) # iterate over the colonies to be summed
{
abundance[i,j,] <- rlnorm(m,X[i],sigma)  # approximately but not exactly 10% error
}
}
median.abundance <- apply(abundance, c(1,2), FUN=median) # take the median abundance for each colony
mean.abundance <- apply(abundance, c(1,2), FUN=mean) # take the median abundance for each colony
sum.median <- apply(median.abundance, 1, sum)
sum.mean <- apply(mean.abundance, 1, sum)
sum.abundance <- apply(abundance, c(1,3), FUN=sum)
median.sum <- apply(sum.abundance, 1, median)
mean.sum <- apply(sum.abundance, 1, mean)
X <- seq(2, 12, 0.1)
sigma <- 0.10
m <- 1000
#########
n <- 100    # redo for all n in c(10,100,1000)
abundance <- array(data=NA, dim=c(length(X), n, m))
for (i in 1:length(X))  # iterate over mean colony size
{
for (j in 1:n) # iterate over the colonies to be summed
{
abundance[i,j,] <- rlnorm(m,X[i],sigma)  # approximately but not exactly 10% error
}
}
median.abundance <- apply(abundance, c(1,2), FUN=median) # take the median abundance for each colony
mean.abundance <- apply(abundance, c(1,2), FUN=mean) # take the median abundance for each colony
sum.median <- apply(median.abundance, 1, sum)
sum.mean <- apply(mean.abundance, 1, sum)
sum.abundance <- apply(abundance, c(1,3), FUN=sum)
median.sum <- apply(sum.abundance, 1, median)
mean.sum <- apply(sum.abundance, 1, mean)
hist(sum.mean)
hist(sum.median,add=T,col="red")
median.sum
hist(median.sum,add=T,col="green")
n <- 100    # redo for all n in c(10,100,1000)
abundance <- array(data=NA, dim=c(n, m))
for (j in 1:n) # iterate over the colonies to be summed
{
abundance[j,] <- rlnorm(m,6,sigma)  # approximately but not exactly 10% error
}
median.abundance <- apply(abundance, 2, FUN=median) # take the median abundance for each colony
mean.abundance <- apply(abundance, 2, FUN=mean) # take the median abundance for each colony
sum.median <- sum(median.abundance)
sum.mean <- sum(mean.abundance)
sum.abundance <- apply(abundance, 1, FUN=sum)
median.sum <- median(sum.abundance)
mean.sum <- mean(sum.abundance)
n <- 100    # redo for all n in c(10,100,1000)
abundance <- array(data=NA, dim=c(n, m))
for (j in 1:n) # iterate over the colonies to be summed
{
abundance[j,] <- rlnorm(m,6,sigma)  # approximately but not exactly 10% error
}
median.abundance <- apply(abundance, 2, FUN=median) # take the median abundance for each colony
mean.abundance <- apply(abundance, 2, FUN=mean) # take the median abundance for each colony
sum.median <- sum(median.abundance)
sum.mean <- sum(mean.abundance)
sum.abundance <- apply(abundance, 1, FUN=sum)
median.sum <- median(sum.abundance)
mean.sum <- mean(sum.abundance)
hist(sum.mean)
hist(sum.median,add=T,col="red")
hist(median.sum,add=T,col="green")
hist(mean.sum,add=T,col="yellow")
mean.sum
median.sum
hist(sum.mean)
hist(sum.median,add=T,col="red")
abline(v=mean.sum,col="yellow")
abline(v=median,col="purple")
sum.median
sum.mean
hist(sum.abundance)
abline(v=mean.sum,col="yellow")
abline(v=median.sum,col="purple")
abline(v=sum.median,col="blue")
n <- 100    # redo for all n in c(10,100,1000)
abundance <- array(data=NA, dim=c(n, m))
for (j in 1:n) # iterate over the colonies to be summed
{
abundance[j,] <- rlnorm(m,8,sigma)  # approximately but not exactly 10% error
}
median.abundance <- apply(abundance, 2, FUN=median) # take the median abundance for each colony
mean.abundance <- apply(abundance, 2, FUN=mean) # take the median abundance for each colony
sum.median <- sum(median.abundance)
sum.mean <- sum(mean.abundance)
sum.abundance <- apply(abundance, 1, FUN=sum)
median.sum <- median(sum.abundance)
mean.sum <- mean(sum.abundance)
hist(sum.abundance)
abline(v=mean.sum,col="yellow",lwd=2)
abline(v=median.sum,col="purple",lwd=2)
abline(v=sum.median,col="blue",lwd=2)
sigma <- 0.20
sigma <- 0.20
n <- 100    # redo for all n in c(10,100,1000)
abundance <- array(data=NA, dim=c(n, m))
for (j in 1:n) # iterate over the colonies to be summed
{
abundance[j,] <- rlnorm(m,8,sigma)  # approximately but not exactly 10% error
}
median.abundance <- apply(abundance, 2, FUN=median) # take the median abundance for each colony
mean.abundance <- apply(abundance, 2, FUN=mean) # take the median abundance for each colony
sum.median <- sum(median.abundance)
sum.mean <- sum(mean.abundance)
sum.abundance <- apply(abundance, 1, FUN=sum)
median.sum <- median(sum.abundance)
mean.sum <- mean(sum.abundance)
hist(sum.abundance)
abline(v=mean.sum,col="yellow",lwd=2)
abline(v=median.sum,col="purple",lwd=2)
abline(v=sum.median,col="blue",lwd=2)
hist(sum.abundance,xlim=c(mean.sum-5*sd(sum.abundance),mean.sum+5*sd(sum.abundance)))
abline(v=mean.sum,col="yellow",lwd=2)
abline(v=median.sum,col="purple",lwd=2)
abline(v=sum.median,col="blue",lwd=2)
sigma <- 0.20
n <- 100    # redo for all n in c(10,100,1000)
abundance <- array(data=NA, dim=c(n, m))
for (j in 1:n) # iterate over the colonies to be summed
{
abundance[j,] <- rlnorm(m,8,sigma)  # approximately but not exactly 10% error
}
median.abundance <- apply(abundance, 2, FUN=median) # take the median abundance for each colony
mean.abundance <- apply(abundance, 2, FUN=mean) # take the median abundance for each colony
sum.median <- sum(median.abundance)
sum.mean <- sum(mean.abundance)
sum.abundance <- apply(abundance, 1, FUN=sum)
median.sum <- median(sum.abundance)
mean.sum <- mean(sum.abundance)
hist(sum.abundance,xlim=c(mean.sum-5*sd(sum.abundance),mean.sum+5*sd(sum.abundance)))
abline(v=mean.sum,col="yellow",lwd=2)
abline(v=median.sum,col="purple",lwd=2)
abline(v=sum.median,col="blue",lwd=2)
hist(sum.abundance,xlim=c(mean.sum-5*sd(sum.abundance),mean.sum+5*sd(sum.abundance)),breaks=30)
abline(v=mean.sum,col="yellow",lwd=2)
abline(v=median.sum,col="purple",lwd=2)
abline(v=sum.median,col="blue",lwd=2)
hist(sum.abundance,xlim=c(mean.sum-5*sd(sum.abundance),mean.sum+5*sd(sum.abundance)),breaks=20)
abline(v=mean.sum,col="yellow",lwd=2)
abline(v=median.sum,col="purple",lwd=2)
abline(v=sum.median,col="blue",lwd=2)
hist(sum.abundance,xlim=c(mean.sum-5*sd(sum.abundance),mean.sum+5*sd(sum.abundance)),breaks=15)
abline(v=mean.sum,col="yellow",lwd=2)
abline(v=median.sum,col="purple",lwd=2)
abline(v=sum.median,col="blue",lwd=2)
hist(sum.abundance,xlim=c(mean.sum-5*sd(sum.abundance),mean.sum+5*sd(sum.abundance)),breaks=15)
abline(v=mean.sum,col="yellow",lwd=2)
abline(v=median.sum,col="purple",lwd=2)
abline(v=sum.median,col="blue",lwd=2)
dim(median.abundance)
dim(abundance)
length(median.abundance)
m<-1000
sigma <- 0.10
n <- 100    # redo for all n in c(10,100,1000)
abundance <- array(data=NA, dim=c(n, m))
for (j in 1:n) # iterate over the colonies to be summed
{
abundance[j,] <- rlnorm(m,8,sigma)  # approximately but not exactly 10% error
}
median.abundance <- apply(abundance, 1, FUN=median) # take the median abundance for each colony
mean.abundance <- apply(abundance, 1, FUN=mean) # take the median abundance for each colony
sum.median <- sum(median.abundance)
sum.mean <- sum(mean.abundance)
sum.abundance <- apply(abundance, 2, FUN=sum)
median.sum <- median(sum.abundance)
mean.sum <- mean(sum.abundance)
hist(sum.abundance,xlim=c(mean.sum-5*sd(sum.abundance),mean.sum+5*sd(sum.abundance)),breaks=15)
abline(v=mean.sum,col="yellow",lwd=2)
abline(v=median.sum,col="purple",lwd=2)
abline(v=sum.median,col="blue",lwd=2)
length(median.abundance)
length(sum.abundance)
hist(sum.abundance,xlim=c(mean.sum-5*sd(sum.abundance),mean.sum+5*sd(sum.abundance)),breaks=15)
abline(v=mean.sum,col="yellow",lwd=2)
abline(v=median.sum,col="purple",lwd=2)
abline(v=sum.median,col="blue",lwd=2)
abline(v=sum.mean,col="green",lwd=2)
m<-1000
sigma <- 0.20
n <- 100    # redo for all n in c(10,100,1000)
abundance <- array(data=NA, dim=c(n, m))
for (j in 1:n) # iterate over the colonies to be summed
{
abundance[j,] <- rlnorm(m,8,sigma)  # approximately but not exactly 10% error
}
median.abundance <- apply(abundance, 1, FUN=median) # take the median abundance for each colony
mean.abundance <- apply(abundance, 1, FUN=mean) # take the median abundance for each colony
sum.median <- sum(median.abundance)
sum.mean <- sum(mean.abundance)
sum.abundance <- apply(abundance, 2, FUN=sum)
median.sum <- median(sum.abundance)
mean.sum <- mean(sum.abundance)
hist(sum.abundance,xlim=c(mean.sum-5*sd(sum.abundance),mean.sum+5*sd(sum.abundance)),breaks=15)
abline(v=mean.sum,col="yellow",lwd=2)
abline(v=median.sum,col="purple",lwd=2)
abline(v=sum.median,col="blue",lwd=2)
abline(v=sum.mean,col="green",lwd=2)
m<-1000
sigma <- 0.20
n <- 100    # redo for all n in c(10,100,1000)
abundance <- array(data=NA, dim=c(n, m))
for (j in 1:n) # iterate over the colonies to be summed
{
abundance[j,] <- rlnorm(m,9,sigma)  # approximately but not exactly 10% error
}
median.abundance <- apply(abundance, 1, FUN=median) # take the median abundance for each colony
mean.abundance <- apply(abundance, 1, FUN=mean) # take the median abundance for each colony
sum.median <- sum(median.abundance)
sum.mean <- sum(mean.abundance)
sum.abundance <- apply(abundance, 2, FUN=sum)
median.sum <- median(sum.abundance)
mean.sum <- mean(sum.abundance)
hist(sum.abundance,xlim=c(mean.sum-5*sd(sum.abundance),mean.sum+5*sd(sum.abundance)),breaks=15)
abline(v=mean.sum,col="yellow",lwd=2)
abline(v=median.sum,col="purple",lwd=2)
abline(v=sum.median,col="blue",lwd=2)
abline(v=sum.mean,col="green",lwd=2)
m<-1000
sigma <- 0.50
n <- 100    # redo for all n in c(10,100,1000)
abundance <- array(data=NA, dim=c(n, m))
for (j in 1:n) # iterate over the colonies to be summed
{
abundance[j,] <- rlnorm(m,9,sigma)  # approximately but not exactly 10% error
}
median.abundance <- apply(abundance, 1, FUN=median) # take the median abundance for each colony
mean.abundance <- apply(abundance, 1, FUN=mean) # take the median abundance for each colony
sum.median <- sum(median.abundance)
sum.mean <- sum(mean.abundance)
sum.abundance <- apply(abundance, 2, FUN=sum)
median.sum <- median(sum.abundance)
mean.sum <- mean(sum.abundance)
hist(sum.abundance,xlim=c(mean.sum-5*sd(sum.abundance),mean.sum+5*sd(sum.abundance)),breaks=15)
abline(v=mean.sum,col="yellow",lwd=2)
abline(v=median.sum,col="purple",lwd=2)
abline(v=sum.median,col="blue",lwd=2)
abline(v=sum.mean,col="green",lwd=2)
m<-1000
sigma <- 0.50
n <- 100    # redo for all n in c(10,100,1000)
abundance <- array(data=NA, dim=c(n, m))
for (j in 1:n) # iterate over the colonies to be summed
{
abundance[j,] <- rlnorm(m,10,sigma)  # approximately but not exactly 10% error
}
median.abundance <- apply(abundance, 1, FUN=median) # take the median abundance for each colony
mean.abundance <- apply(abundance, 1, FUN=mean) # take the median abundance for each colony
sum.median <- sum(median.abundance)
sum.mean <- sum(mean.abundance)
sum.abundance <- apply(abundance, 2, FUN=sum)
median.sum <- median(sum.abundance)
mean.sum <- mean(sum.abundance)
hist(sum.abundance,xlim=c(mean.sum-5*sd(sum.abundance),mean.sum+5*sd(sum.abundance)),breaks=15)
abline(v=mean.sum,col="yellow",lwd=2)
abline(v=median.sum,col="purple",lwd=2)
abline(v=sum.median,col="blue",lwd=2)
abline(v=sum.mean,col="green",lwd=2)
m<-1000
sigma <- 0.23
n <- 100    # redo for all n in c(10,100,1000)
abundance <- array(data=NA, dim=c(n, m))
for (j in 1:n) # iterate over the colonies to be summed
{
abundance[j,] <- rlnorm(m,10,sigma)  # approximately but not exactly 10% error
}
median.abundance <- apply(abundance, 1, FUN=median) # take the median abundance for each colony
mean.abundance <- apply(abundance, 1, FUN=mean) # take the median abundance for each colony
sum.median <- sum(median.abundance)
sum.mean <- sum(mean.abundance)
sum.abundance <- apply(abundance, 2, FUN=sum)
median.sum <- median(sum.abundance)
mean.sum <- mean(sum.abundance)
hist(sum.abundance,xlim=c(mean.sum-5*sd(sum.abundance),mean.sum+5*sd(sum.abundance)),breaks=15)
abline(v=mean.sum,col="yellow",lwd=2)
abline(v=median.sum,col="purple",lwd=2)
abline(v=sum.median,col="blue",lwd=2)
abline(v=sum.mean,col="green",lwd=2)
m<-1000
sigma <- 0.23
n <- 1000    # redo for all n in c(10,100,1000)
abundance <- array(data=NA, dim=c(n, m))
for (j in 1:n) # iterate over the colonies to be summed
{
abundance[j,] <- rlnorm(m,8,sigma)  # approximately but not exactly 10% error
}
median.abundance <- apply(abundance, 1, FUN=median) # take the median abundance for each colony
mean.abundance <- apply(abundance, 1, FUN=mean) # take the median abundance for each colony
sum.median <- sum(median.abundance)
sum.mean <- sum(mean.abundance)
sum.abundance <- apply(abundance, 2, FUN=sum)
median.sum <- median(sum.abundance)
mean.sum <- mean(sum.abundance)
hist(sum.abundance,xlim=c(mean.sum-5*sd(sum.abundance),mean.sum+5*sd(sum.abundance)),breaks=15)
abline(v=mean.sum,col="yellow",lwd=2)
abline(v=median.sum,col="purple",lwd=2)
abline(v=sum.median,col="blue",lwd=2)
abline(v=sum.mean,col="green",lwd=2)
m<-1000
sigma <- 0.23
n <- 1000    # redo for all n in c(10,100,1000)
abundance <- array(data=NA, dim=c(n, m))
for (j in 1:n) # iterate over the colonies to be summed
{
abundance[j,] <- rlnorm(m,8,sigma)  # approximately but not exactly 10% error
}
median.abundance <- apply(abundance, 1, FUN=median) # take the median abundance for each colony
mean.abundance <- apply(abundance, 1, FUN=mean) # take the median abundance for each colony
sum.median <- sum(median.abundance)
sum.mean <- sum(mean.abundance)
sum.abundance <- apply(abundance, 2, FUN=sum)
median.sum <- median(sum.abundance)
mean.sum <- mean(sum.abundance)
hist(sum.abundance,xlim=c(mean.sum-5*sd(sum.abundance),mean.sum+5*sd(sum.abundance)),breaks=15)
abline(v=mean.sum,col="yellow",lwd=2)
abline(v=median.sum,col="purple",lwd=2)
abline(v=sum.median,col="blue",lwd=2)
abline(v=sum.mean,col="green",lwd=2)
mean.sum
median.sum
sum.mean
candy_color<-c("brown","yellow","green","red","orange","blue")
company<-c(0.14,0.14,0.16,0.13,0.19,0.24)
my_bag<-c(1,1,2,2,10,7)
color_prob<-data.frame(candy_color,company,my_bag,stringsAsFactors = FALSE)
head(color_prob)
sample(size=29,
color_prob$candy_color,
prob=color_prob$company,
replace=TRUE))
sample(size=29,
color_prob$candy_color,
prob=color_prob$company,
replace=TRUE)
color_prob$candy_color
for (i in 1:100){
if((table(sample(size=29,
color_prob$candy_color,
prob=color_prob$company,
replace=TRUE)))==color_prob$my_bag){
print(1)
} else print(0)
}
sample(size=29,
color_prob$candy_color,
prob=color_prob$company,
replace=TRUE)
color_prob$my_bag
table(sample(size=29,
color_prob$candy_color,
prob=color_prob$company,
replace=TRUE))
my_bag<-sample(size=29,
color_prob$candy_color,
prob=color_prob$company,
replace=TRUE)
my_bag
may_bag=="red"
my_bag=="red"
as.numeric(my_bag=="red")
sum(as.numeric(my_bag=="red"))
number.red<-sum(as.numeric(my_bag=="red"))
library("boot", lib.loc="/Library/Frameworks/R.framework/Versions/4.0/Resources/library")
darwin
hist(darwin)
hist(darwin$y)
sort(darwin$y)
141*1.51*1.595
141*1.595
10000/37000
(90000+37000/0.25)
(90000+(37000/0.75))
37000*1.25
37000/90000
0.41*0.25
library(readxl)
UCS_Satellite_Database_8_1_2020 <- read_excel("~/Desktop/SCAR plenary/UCS-Satellite-Database-8-1-2020.xls")
View(UCS_Satellite_Database_8_1_2020)
library("lubridate", lib.loc="/Library/Frameworks/R.framework/Versions/4.0/Resources/library")
?lubridate
data<-UCS_Satellite_Database_8_1_2020
head(data$`Date of Launch`)
head(year(data$`Date of Launch`))
hist(year(data$`Date of Launch`))
hist(year(data$`Date of Launch`),breaks=seq(min(year(data$`Date of Launch`)),max(year(data$`Date of Launch`))))
hist(year(data$`Date of Launch`),breaks=seq(min(year(data$`Date of Launch`)),max(year(data$`Date of Launch`)),1))
hist(year(data$`Date of Launch`),breaks=seq(min(year(data$`Date of Launch`),na.rm=T),max(year(data$`Date of Launch`),na.rm=T),1))
hist(year(data$`Date of Launch`),breaks=seq(min(year(data$`Date of Launch`),na.rm=T),max(year(data$`Date of Launch`),na.rm=T),1),plot=F)
year_trends<-hist(year(data$`Date of Launch`),breaks=seq(min(year(data$`Date of Launch`),na.rm=T),max(year(data$`Date of Launch`),na.rm=T),1),plot=F)
data %>%
ggplot( aes(x=year_trends$mids, y=year_trends$counts)) +
geom_line(color="#69b3a2") +
ylim(0,600) +
theme_ipsum()
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/4.0/Resources/library")
data %>%
ggplot( aes(x=year_trends$mids, y=year_trends$counts)) +
geom_line(color="#69b3a2") +
ylim(0,600) +
theme_ipsum()
library("dplyr", lib.loc="/Library/Frameworks/R.framework/Versions/4.0/Resources/library")
data %>%
ggplot( aes(x=year_trends$mids, y=year_trends$counts)) +
geom_line(color="#69b3a2") +
ylim(0,600) +
theme_ipsum()
data %>%
ggplot( aes(x=year_trends$mids, y=year_trends$counts)) +
geom_line(color="#69b3a2") +
ylim(0,600)
data %>%
ggplot(aes(x=year_trends$mids, y=year_trends$counts)) +
geom_line(color="#69b3a2") +
ylim(0,600)
?ggplot2
ggplot(data=year_trends, aes(x=mids, y=counts)) +
geom_line(color="#69b3a2") +
ylim(0,600)
ggplot(data=year_trends, mapping=aes(x=mids, y=counts))
ggplot(data=data.frame(year_trends), mapping=aes(x=mids, y=counts))
ggplot(data=as.data.frame(year_trends), aes(x=mids, y=counts))
plot(year_trends$mids,year_trends$counts)
plot(year_trends$mids,year_trends$counts,pch=16)
plot(year_trends$mids,year_trends$counts,pch=16,typ="b")
plot(year_trends$mids,year_trends$counts,pch=16,cex=1.5,typ="b")
table(data$Users)
bar(table(data$Users))
barplot(table(data$Users))
barplot(table(data$Users[data$year(data$`Date of Launch`)<2000]))
barplot(table(data$Users[year(data$`Date of Launch`)<2000]))
barplot(table(data$Users[year(data$`Date of Launch`)>2010]))
counts <- table(data$Users[year(data$`Date of Launch`)<2000], data$Users[year(data$`Date of Launch`)>2010])
counts <- table(data$Users[year(data$`Date of Launch`)<2000], data$Users[year(data$`Date of Launch`)>2010],data$Users
)
table(data$Users[year(data$`Date of Launch`)>2010])
table(data$Users[year(data$`Date of Launch`)<2000])
table(data$Users[year(data$`Date of Launch`)<2010])
specie <- c(rep("sorgho" , 3) , rep("poacee" , 3) , rep("banana" , 3) , rep("triticum" , 3) )
condition <- rep(c("normal" , "stress" , "Nitrogen") , 4)
value <- abs(rnorm(12 , 0 , 15))
data <- data.frame(specie,condition,value)
data
data<-UCS_Satellite_Database_8_1_2020
length((year(data$`Date of Launch`)<2010)&(data$Users=="Civil"))
table(data$Users[year(data$`Date of Launch`)>2010])$Civil
temp<-table(data$Users[year(data$`Date of Launch`)>2010])
temp
length(temp)
names(temp)
temp[names(temp)=="Civil"]
as.numeric(temp[names(temp)=="Civil"])
temp<-table(data$Users[year(data$`Date of Launch`)<2010])
early<-c(as.numeric(temp[names(temp)=="Civil"]),as.numeric(temp[names(temp)=="Commercial"]),as.numeric(temp[names(temp)=="Government"]),as.numeric(temp[names(temp)=="Military"]))
temp<-table(data$Users[year(data$`Date of Launch`)>2009])
late<-c(as.numeric(temp[names(temp)=="Civil"]),as.numeric(temp[names(temp)=="Commercial"]),as.numeric(temp[names(temp)=="Government"]),as.numeric(temp[names(temp)=="Military"]))
early
late
late/early
data_earth<-data[data$Purpose %like% "Earth",]
install.packages("DescTools")
library("DescTools", lib.loc="/Library/Frameworks/R.framework/Versions/4.0/Resources/library")
data_earth<-data[data$Purpose %like% "Earth",]
view(data_earth)
View(data_earth)
data_earth<-data[data$Purpose %like% "%Earth%",]
View(data_earth)
earth_year_trends<-hist(year(data_earth$`Date of Launch`),breaks=seq(min(year(data_earth$`Date of Launch`),na.rm=T),max(year(data_earth$`Date of Launch`),na.rm=T),1),plot=F)
plot(earth_year_trends$mids,earth_year_trends$counts,pch=16,cex=1.5,typ="b")
plot(year_trends$mids,year_trends$counts,pch=16,cex=1.5,typ="b")
points(earth_year_trends$mids,earth_year_trends$counts,pch=16,cex=1.5,typ="b",col="red")
setwd("~/Documents/Projects/Biometry2021")
bookdown::render_book("index.Rmd")
pnorm(0)
