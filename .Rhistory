X <- seq(2, 12, 0.1)
sigma <- 0.10
m <- 1000
#########
n <- 100    # redo for all n in c(10,100,1000)
abundance <- array(data=NA, dim=c(length(X), n, m))
for (i in 1:length(X))  # iterate over mean colony size
{
for (j in 1:n) # iterate over the colonies to be summed
{
abundance[i,j,] <- rlnorm(m,X[i],sigma)  # approximately but not exactly 10% error
}
}
median.abundance <- apply(abundance, c(1,2), FUN=median) # take the median abundance for each colony
mean.abundance <- apply(abundance, c(1,2), FUN=mean) # take the median abundance for each colony
sum.median <- apply(median.abundance, 1, sum)
sum.mean <- apply(mean.abundance, 1, sum)
sum.abundance <- apply(abundance, c(1,3), FUN=sum)
median.sum <- apply(sum.abundance, 1, median)
mean.sum <- apply(sum.abundance, 1, mean)
hist(sum.mean)
hist(sum.median,add=T,col="red")
median.sum
hist(median.sum,add=T,col="green")
n <- 100    # redo for all n in c(10,100,1000)
abundance <- array(data=NA, dim=c(n, m))
for (j in 1:n) # iterate over the colonies to be summed
{
abundance[j,] <- rlnorm(m,6,sigma)  # approximately but not exactly 10% error
}
median.abundance <- apply(abundance, 2, FUN=median) # take the median abundance for each colony
mean.abundance <- apply(abundance, 2, FUN=mean) # take the median abundance for each colony
sum.median <- sum(median.abundance)
sum.mean <- sum(mean.abundance)
sum.abundance <- apply(abundance, 1, FUN=sum)
median.sum <- median(sum.abundance)
mean.sum <- mean(sum.abundance)
n <- 100    # redo for all n in c(10,100,1000)
abundance <- array(data=NA, dim=c(n, m))
for (j in 1:n) # iterate over the colonies to be summed
{
abundance[j,] <- rlnorm(m,6,sigma)  # approximately but not exactly 10% error
}
median.abundance <- apply(abundance, 2, FUN=median) # take the median abundance for each colony
mean.abundance <- apply(abundance, 2, FUN=mean) # take the median abundance for each colony
sum.median <- sum(median.abundance)
sum.mean <- sum(mean.abundance)
sum.abundance <- apply(abundance, 1, FUN=sum)
median.sum <- median(sum.abundance)
mean.sum <- mean(sum.abundance)
hist(sum.mean)
hist(sum.median,add=T,col="red")
hist(median.sum,add=T,col="green")
hist(mean.sum,add=T,col="yellow")
mean.sum
median.sum
hist(sum.mean)
hist(sum.median,add=T,col="red")
abline(v=mean.sum,col="yellow")
abline(v=median,col="purple")
sum.median
sum.mean
hist(sum.abundance)
abline(v=mean.sum,col="yellow")
abline(v=median.sum,col="purple")
abline(v=sum.median,col="blue")
n <- 100    # redo for all n in c(10,100,1000)
abundance <- array(data=NA, dim=c(n, m))
for (j in 1:n) # iterate over the colonies to be summed
{
abundance[j,] <- rlnorm(m,8,sigma)  # approximately but not exactly 10% error
}
median.abundance <- apply(abundance, 2, FUN=median) # take the median abundance for each colony
mean.abundance <- apply(abundance, 2, FUN=mean) # take the median abundance for each colony
sum.median <- sum(median.abundance)
sum.mean <- sum(mean.abundance)
sum.abundance <- apply(abundance, 1, FUN=sum)
median.sum <- median(sum.abundance)
mean.sum <- mean(sum.abundance)
hist(sum.abundance)
abline(v=mean.sum,col="yellow",lwd=2)
abline(v=median.sum,col="purple",lwd=2)
abline(v=sum.median,col="blue",lwd=2)
sigma <- 0.20
sigma <- 0.20
n <- 100    # redo for all n in c(10,100,1000)
abundance <- array(data=NA, dim=c(n, m))
for (j in 1:n) # iterate over the colonies to be summed
{
abundance[j,] <- rlnorm(m,8,sigma)  # approximately but not exactly 10% error
}
median.abundance <- apply(abundance, 2, FUN=median) # take the median abundance for each colony
mean.abundance <- apply(abundance, 2, FUN=mean) # take the median abundance for each colony
sum.median <- sum(median.abundance)
sum.mean <- sum(mean.abundance)
sum.abundance <- apply(abundance, 1, FUN=sum)
median.sum <- median(sum.abundance)
mean.sum <- mean(sum.abundance)
hist(sum.abundance)
abline(v=mean.sum,col="yellow",lwd=2)
abline(v=median.sum,col="purple",lwd=2)
abline(v=sum.median,col="blue",lwd=2)
hist(sum.abundance,xlim=c(mean.sum-5*sd(sum.abundance),mean.sum+5*sd(sum.abundance)))
abline(v=mean.sum,col="yellow",lwd=2)
abline(v=median.sum,col="purple",lwd=2)
abline(v=sum.median,col="blue",lwd=2)
sigma <- 0.20
n <- 100    # redo for all n in c(10,100,1000)
abundance <- array(data=NA, dim=c(n, m))
for (j in 1:n) # iterate over the colonies to be summed
{
abundance[j,] <- rlnorm(m,8,sigma)  # approximately but not exactly 10% error
}
median.abundance <- apply(abundance, 2, FUN=median) # take the median abundance for each colony
mean.abundance <- apply(abundance, 2, FUN=mean) # take the median abundance for each colony
sum.median <- sum(median.abundance)
sum.mean <- sum(mean.abundance)
sum.abundance <- apply(abundance, 1, FUN=sum)
median.sum <- median(sum.abundance)
mean.sum <- mean(sum.abundance)
hist(sum.abundance,xlim=c(mean.sum-5*sd(sum.abundance),mean.sum+5*sd(sum.abundance)))
abline(v=mean.sum,col="yellow",lwd=2)
abline(v=median.sum,col="purple",lwd=2)
abline(v=sum.median,col="blue",lwd=2)
hist(sum.abundance,xlim=c(mean.sum-5*sd(sum.abundance),mean.sum+5*sd(sum.abundance)),breaks=30)
abline(v=mean.sum,col="yellow",lwd=2)
abline(v=median.sum,col="purple",lwd=2)
abline(v=sum.median,col="blue",lwd=2)
hist(sum.abundance,xlim=c(mean.sum-5*sd(sum.abundance),mean.sum+5*sd(sum.abundance)),breaks=20)
abline(v=mean.sum,col="yellow",lwd=2)
abline(v=median.sum,col="purple",lwd=2)
abline(v=sum.median,col="blue",lwd=2)
hist(sum.abundance,xlim=c(mean.sum-5*sd(sum.abundance),mean.sum+5*sd(sum.abundance)),breaks=15)
abline(v=mean.sum,col="yellow",lwd=2)
abline(v=median.sum,col="purple",lwd=2)
abline(v=sum.median,col="blue",lwd=2)
hist(sum.abundance,xlim=c(mean.sum-5*sd(sum.abundance),mean.sum+5*sd(sum.abundance)),breaks=15)
abline(v=mean.sum,col="yellow",lwd=2)
abline(v=median.sum,col="purple",lwd=2)
abline(v=sum.median,col="blue",lwd=2)
dim(median.abundance)
dim(abundance)
length(median.abundance)
m<-1000
sigma <- 0.10
n <- 100    # redo for all n in c(10,100,1000)
abundance <- array(data=NA, dim=c(n, m))
for (j in 1:n) # iterate over the colonies to be summed
{
abundance[j,] <- rlnorm(m,8,sigma)  # approximately but not exactly 10% error
}
median.abundance <- apply(abundance, 1, FUN=median) # take the median abundance for each colony
mean.abundance <- apply(abundance, 1, FUN=mean) # take the median abundance for each colony
sum.median <- sum(median.abundance)
sum.mean <- sum(mean.abundance)
sum.abundance <- apply(abundance, 2, FUN=sum)
median.sum <- median(sum.abundance)
mean.sum <- mean(sum.abundance)
hist(sum.abundance,xlim=c(mean.sum-5*sd(sum.abundance),mean.sum+5*sd(sum.abundance)),breaks=15)
abline(v=mean.sum,col="yellow",lwd=2)
abline(v=median.sum,col="purple",lwd=2)
abline(v=sum.median,col="blue",lwd=2)
length(median.abundance)
length(sum.abundance)
hist(sum.abundance,xlim=c(mean.sum-5*sd(sum.abundance),mean.sum+5*sd(sum.abundance)),breaks=15)
abline(v=mean.sum,col="yellow",lwd=2)
abline(v=median.sum,col="purple",lwd=2)
abline(v=sum.median,col="blue",lwd=2)
abline(v=sum.mean,col="green",lwd=2)
m<-1000
sigma <- 0.20
n <- 100    # redo for all n in c(10,100,1000)
abundance <- array(data=NA, dim=c(n, m))
for (j in 1:n) # iterate over the colonies to be summed
{
abundance[j,] <- rlnorm(m,8,sigma)  # approximately but not exactly 10% error
}
median.abundance <- apply(abundance, 1, FUN=median) # take the median abundance for each colony
mean.abundance <- apply(abundance, 1, FUN=mean) # take the median abundance for each colony
sum.median <- sum(median.abundance)
sum.mean <- sum(mean.abundance)
sum.abundance <- apply(abundance, 2, FUN=sum)
median.sum <- median(sum.abundance)
mean.sum <- mean(sum.abundance)
hist(sum.abundance,xlim=c(mean.sum-5*sd(sum.abundance),mean.sum+5*sd(sum.abundance)),breaks=15)
abline(v=mean.sum,col="yellow",lwd=2)
abline(v=median.sum,col="purple",lwd=2)
abline(v=sum.median,col="blue",lwd=2)
abline(v=sum.mean,col="green",lwd=2)
m<-1000
sigma <- 0.20
n <- 100    # redo for all n in c(10,100,1000)
abundance <- array(data=NA, dim=c(n, m))
for (j in 1:n) # iterate over the colonies to be summed
{
abundance[j,] <- rlnorm(m,9,sigma)  # approximately but not exactly 10% error
}
median.abundance <- apply(abundance, 1, FUN=median) # take the median abundance for each colony
mean.abundance <- apply(abundance, 1, FUN=mean) # take the median abundance for each colony
sum.median <- sum(median.abundance)
sum.mean <- sum(mean.abundance)
sum.abundance <- apply(abundance, 2, FUN=sum)
median.sum <- median(sum.abundance)
mean.sum <- mean(sum.abundance)
hist(sum.abundance,xlim=c(mean.sum-5*sd(sum.abundance),mean.sum+5*sd(sum.abundance)),breaks=15)
abline(v=mean.sum,col="yellow",lwd=2)
abline(v=median.sum,col="purple",lwd=2)
abline(v=sum.median,col="blue",lwd=2)
abline(v=sum.mean,col="green",lwd=2)
m<-1000
sigma <- 0.50
n <- 100    # redo for all n in c(10,100,1000)
abundance <- array(data=NA, dim=c(n, m))
for (j in 1:n) # iterate over the colonies to be summed
{
abundance[j,] <- rlnorm(m,9,sigma)  # approximately but not exactly 10% error
}
median.abundance <- apply(abundance, 1, FUN=median) # take the median abundance for each colony
mean.abundance <- apply(abundance, 1, FUN=mean) # take the median abundance for each colony
sum.median <- sum(median.abundance)
sum.mean <- sum(mean.abundance)
sum.abundance <- apply(abundance, 2, FUN=sum)
median.sum <- median(sum.abundance)
mean.sum <- mean(sum.abundance)
hist(sum.abundance,xlim=c(mean.sum-5*sd(sum.abundance),mean.sum+5*sd(sum.abundance)),breaks=15)
abline(v=mean.sum,col="yellow",lwd=2)
abline(v=median.sum,col="purple",lwd=2)
abline(v=sum.median,col="blue",lwd=2)
abline(v=sum.mean,col="green",lwd=2)
m<-1000
sigma <- 0.50
n <- 100    # redo for all n in c(10,100,1000)
abundance <- array(data=NA, dim=c(n, m))
for (j in 1:n) # iterate over the colonies to be summed
{
abundance[j,] <- rlnorm(m,10,sigma)  # approximately but not exactly 10% error
}
median.abundance <- apply(abundance, 1, FUN=median) # take the median abundance for each colony
mean.abundance <- apply(abundance, 1, FUN=mean) # take the median abundance for each colony
sum.median <- sum(median.abundance)
sum.mean <- sum(mean.abundance)
sum.abundance <- apply(abundance, 2, FUN=sum)
median.sum <- median(sum.abundance)
mean.sum <- mean(sum.abundance)
hist(sum.abundance,xlim=c(mean.sum-5*sd(sum.abundance),mean.sum+5*sd(sum.abundance)),breaks=15)
abline(v=mean.sum,col="yellow",lwd=2)
abline(v=median.sum,col="purple",lwd=2)
abline(v=sum.median,col="blue",lwd=2)
abline(v=sum.mean,col="green",lwd=2)
m<-1000
sigma <- 0.23
n <- 100    # redo for all n in c(10,100,1000)
abundance <- array(data=NA, dim=c(n, m))
for (j in 1:n) # iterate over the colonies to be summed
{
abundance[j,] <- rlnorm(m,10,sigma)  # approximately but not exactly 10% error
}
median.abundance <- apply(abundance, 1, FUN=median) # take the median abundance for each colony
mean.abundance <- apply(abundance, 1, FUN=mean) # take the median abundance for each colony
sum.median <- sum(median.abundance)
sum.mean <- sum(mean.abundance)
sum.abundance <- apply(abundance, 2, FUN=sum)
median.sum <- median(sum.abundance)
mean.sum <- mean(sum.abundance)
hist(sum.abundance,xlim=c(mean.sum-5*sd(sum.abundance),mean.sum+5*sd(sum.abundance)),breaks=15)
abline(v=mean.sum,col="yellow",lwd=2)
abline(v=median.sum,col="purple",lwd=2)
abline(v=sum.median,col="blue",lwd=2)
abline(v=sum.mean,col="green",lwd=2)
m<-1000
sigma <- 0.23
n <- 1000    # redo for all n in c(10,100,1000)
abundance <- array(data=NA, dim=c(n, m))
for (j in 1:n) # iterate over the colonies to be summed
{
abundance[j,] <- rlnorm(m,8,sigma)  # approximately but not exactly 10% error
}
median.abundance <- apply(abundance, 1, FUN=median) # take the median abundance for each colony
mean.abundance <- apply(abundance, 1, FUN=mean) # take the median abundance for each colony
sum.median <- sum(median.abundance)
sum.mean <- sum(mean.abundance)
sum.abundance <- apply(abundance, 2, FUN=sum)
median.sum <- median(sum.abundance)
mean.sum <- mean(sum.abundance)
hist(sum.abundance,xlim=c(mean.sum-5*sd(sum.abundance),mean.sum+5*sd(sum.abundance)),breaks=15)
abline(v=mean.sum,col="yellow",lwd=2)
abline(v=median.sum,col="purple",lwd=2)
abline(v=sum.median,col="blue",lwd=2)
abline(v=sum.mean,col="green",lwd=2)
m<-1000
sigma <- 0.23
n <- 1000    # redo for all n in c(10,100,1000)
abundance <- array(data=NA, dim=c(n, m))
for (j in 1:n) # iterate over the colonies to be summed
{
abundance[j,] <- rlnorm(m,8,sigma)  # approximately but not exactly 10% error
}
median.abundance <- apply(abundance, 1, FUN=median) # take the median abundance for each colony
mean.abundance <- apply(abundance, 1, FUN=mean) # take the median abundance for each colony
sum.median <- sum(median.abundance)
sum.mean <- sum(mean.abundance)
sum.abundance <- apply(abundance, 2, FUN=sum)
median.sum <- median(sum.abundance)
mean.sum <- mean(sum.abundance)
hist(sum.abundance,xlim=c(mean.sum-5*sd(sum.abundance),mean.sum+5*sd(sum.abundance)),breaks=15)
abline(v=mean.sum,col="yellow",lwd=2)
abline(v=median.sum,col="purple",lwd=2)
abline(v=sum.median,col="blue",lwd=2)
abline(v=sum.mean,col="green",lwd=2)
mean.sum
median.sum
sum.mean
candy_color<-c("brown","yellow","green","red","orange","blue")
company<-c(0.14,0.14,0.16,0.13,0.19,0.24)
my_bag<-c(1,1,2,2,10,7)
color_prob<-data.frame(candy_color,company,my_bag,stringsAsFactors = FALSE)
head(color_prob)
sample(size=29,
color_prob$candy_color,
prob=color_prob$company,
replace=TRUE))
sample(size=29,
color_prob$candy_color,
prob=color_prob$company,
replace=TRUE)
color_prob$candy_color
for (i in 1:100){
if((table(sample(size=29,
color_prob$candy_color,
prob=color_prob$company,
replace=TRUE)))==color_prob$my_bag){
print(1)
} else print(0)
}
sample(size=29,
color_prob$candy_color,
prob=color_prob$company,
replace=TRUE)
color_prob$my_bag
table(sample(size=29,
color_prob$candy_color,
prob=color_prob$company,
replace=TRUE))
my_bag<-sample(size=29,
color_prob$candy_color,
prob=color_prob$company,
replace=TRUE)
my_bag
may_bag=="red"
my_bag=="red"
as.numeric(my_bag=="red")
sum(as.numeric(my_bag=="red"))
number.red<-sum(as.numeric(my_bag=="red"))
library("boot", lib.loc="/Library/Frameworks/R.framework/Versions/4.0/Resources/library")
darwin
hist(darwin)
hist(darwin$y)
sort(darwin$y)
G_max_chicks <- matrix(c(0.00,0.43*0.76,0.82*0.76,0.82*0.76,0.82*0.76,0.82*0.76,0.82*0.76,
0.43,0.00,0.00,0.00,0.00,0.00,0.00,
0.00,0.43,0.00,0.00,0.00,0.00,0.00,
0.00,0.00,0.82,0.00,0.00,0.00,0.00,
0.00,0.00,0.00,0.82,0.00,0.00,0.00,
0.00,0.00,0.00,0.00,0.82,0.00,0.00,
0.00,0.00,0.00,0.00,0.00,0.82,0.82), nrow = 7, byrow=TRUE)
abundance_fun <- function(Lmatrix, year, starters, intercept_temp, slope_temp){
G.projected <- matrix(0, nrow = nrow(Lmatrix), ncol = year+1)
G0 <-matrix(c(0,0,starters,0,0,0,0), ncol = 1)
G.projected[, 1] <- G0
immigration_storage <- c()
for (j in 1:year)
{
abundance <- colSums(G.projected[3:7,], na.rm=TRUE)
immigration <- rpois(1,pmax(0.001,intercept_temp+slope_temp*sum(abundance))) # immigration is function of abundance
immigration_storage[j] <- immigration
M <- matrix(c(0,0,immigration,0,0,0,0), ncol = 1) # Migrant vector
G.projected[, j + 1] <- round((Lmatrix %*% (G.projected[,j]+M)), digits = 0)
}
immigration_storage <- c(immigration_storage, NA) # Adds one NA so that vector is same length as G.series.
G.series <- colSums(G.projected[3:7,], na.rm=TRUE) # Sums the number of simulated individuals for each series
output <- cbind(G.series, immigration_storage)
return(output)}
BISC_count <- c(14,33,45,56,26,149,296,288,639,644,753,902,977,NA,NA,2401,2404,3081,3197)
BISC_years <- c(1994,1995,1996,1997,1998,1999,2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011, 2012)
Data <- as.data.frame(cbind(BISC_count, BISC_years))
colnames(Data) <- c("count","year")
site_details<-data.frame(c("ORNE","BISC","MOOT","VERN"),c(3,14,0,14),c(19,18,12,11))
colnames(site_details)<-c("Site","Count","TimeSpan")
selection<-site_details$Site=="BISC" # can be changed out for ORNE, MOOT, and VERN
N <- 20 # number of accepted particles
keep <- matrix(ncol = 2, nrow = N)
intercept <- c()
slope <- c()
i <- 0 # Initiate counter of accepted particles
j <- 0 # Initiate counter of proposed particles
year <- site_details$TimeSpan[selection]
keep_immigrants <- c()
simulated_timeseries<-Data$count
kept_timeseries<-Data$count
i=1
intercept_temp <- runif(1, 0, 50)
slope_temp <- runif(1, -0.5, 0.5)
intercept<- c(intercept, intercept_temp)
slope <- c(slope, slope_temp)
Lmatrix<-G_max_chicks
starters<-site_details$Count[selection]
G.projected <- matrix(0, nrow = nrow(Lmatrix), ncol = year+1)
G.projected
G0 <-matrix(c(0,0,starters,0,0,0,0), ncol = 1)
G0
G.projected[, 1] <- G0
G.projected
immigration_storage <- c()
j=1
abundance <- colSums(G.projected[3:7,], na.rm=TRUE)
abundance
immigration <- rpois(1,pmax(0.001,intercept_temp+slope_temp*sum(abundance))) # immigration is function of abundance
immigration_storage[j] <- immigration
M <- matrix(c(0,0,immigration,0,0,0,0), ncol = 1) # Migrant vector
G.projected[, j + 1] <- round((Lmatrix %*% (G.projected[,j]+M)), digits = 0)
G.projected
j=2
abundance <- colSums(G.projected[3:7,], na.rm=TRUE)
abundance
abundance[j]
abundance_fun <- function(Lmatrix, year, starters, intercept_temp, slope_temp){
G.projected <- matrix(0, nrow = nrow(Lmatrix), ncol = year+1)
G0 <-matrix(c(0,0,starters,0,0,0,0), ncol = 1)
G.projected[, 1] <- G0
immigration_storage <- c()
for (j in 1:year)
{
abundance <- colSums(G.projected[3:7,], na.rm=TRUE)
immigration <- rpois(1,pmax(0.001,intercept_temp+slope_temp*abundance[j])) # immigration is function of abundance
immigration_storage[j] <- immigration
M <- matrix(c(0,0,immigration,0,0,0,0), ncol = 1) # Migrant vector
G.projected[, j + 1] <- round((Lmatrix %*% (G.projected[,j]+M)), digits = 0)
}
immigration_storage <- c(immigration_storage, NA) # Adds one NA so that vector is same length as G.series.
G.series <- colSums(G.projected[3:7,], na.rm=TRUE) # Sums the number of simulated individuals for each series
output <- cbind(G.series, immigration_storage)
return(output)}
BISC_count <- c(14,33,45,56,26,149,296,288,639,644,753,902,977,NA,NA,2401,2404,3081,3197)
BISC_years <- c(1994,1995,1996,1997,1998,1999,2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011, 2012)
Data <- as.data.frame(cbind(BISC_count, BISC_years))
colnames(Data) <- c("count","year")
site_details<-data.frame(c("ORNE","BISC","MOOT","VERN"),c(3,14,0,14),c(19,18,12,11))
colnames(site_details)<-c("Site","Count","TimeSpan")
selection<-site_details$Site=="BISC" # can be changed out for ORNE, MOOT, and VERN
N <- 20 # number of accepted particles
keep <- matrix(ncol = 2, nrow = N)
intercept <- c()
slope <- c()
i <- 0 # Initiate counter of accepted particles
j <- 0 # Initiate counter of proposed particles
year <- site_details$TimeSpan[selection]
keep_immigrants <- c()
simulated_timeseries<-Data$count
kept_timeseries<-Data$count
while(i <= N)
{
intercept_temp <- runif(1, 0, 50)
slope_temp <- runif(1, -0.5, 0.5)
intercept<- c(intercept, intercept_temp)
slope <- c(slope, slope_temp)
D_star <- abundance_fun(G_max_chicks, year, site_details$Count[selection], intercept_temp, slope_temp)
simulated_timeseries<-cbind(simulated_timeseries,D_star[,1])
JLE_i <- mean(abs((Data$count-D_star[,1])/Data$count), na.rm=TRUE) * 100 # Joint likelihood estimate
if(JLE_i <= 40)
{
keep[i,] <- c(intercept_temp, slope_temp)
i <- i + 1 #update counter
kept_timeseries<-cbind(kept_timeseries,D_star[,1])
keep_immigrants <-cbind(keep_immigrants, D_star[,2])
}
j <- j + 1
acc_rate <- i/j # calculate the acceptance rate
cat("current acceptance rate = ", round(acc_rate, 2), "\n")
}
{plot(Data$year,Data$count,pch=15,ylim=c(0,4000))
for (k in 1:min(j,2000))
{
lines(Data$year,simulated_timeseries[,k],col=rgb(0,0,0,0.1))
}
for (m in 1:i)
{
lines(Data$year,kept_timeseries[,m],col=rgb(1,0,0,1))
}
points(Data$year,Data$count,pch=15,col="darkblue")}
dim(keep)
keep
hist(keep[,1])
hist(keep[,2])
730/18
BISC_count <- c(14,33,45,56,26,149,296,288,639,644,753,902,977,NA,NA,2401,2404,3081,3197)
BISC_years <- c(1994,1995,1996,1997,1998,1999,2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011, 2012)
data.frame(cbind(BISC_count, BISC_years))
install.packages("kableExtra")
library("kableExtra", lib.loc="/Library/Frameworks/R.framework/Versions/4.0/Resources/library")
R.Version()
setwd("~/Desktop")
install.packages("mapppdr_0.1.1.6.tar.gz", repos = NULL, type="source")
vignette(mapppdr)
setwd("~/Documents/Projects/Biometry2021")
bookdown::render_book("index.Rmd")
hist(rnorm(100))
6203-1500
setwd("~/Documents/Projects/Biometry2021")
bookdown::render_book("index.Rmd")
bookdown::render_book("index.Rmd")
bookdown::render_book("index.Rmd")
bookdown::render_book("index.Rmd")
